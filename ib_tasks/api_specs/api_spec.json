{
  "swagger": "2.0",
  "host": "127.0.0.1:8000",
  "basePath": "/api/ib_tasks/",
  "info": {
    "version": "1.0.0",
    "title": "Simple API",
    "description": "A simple API to learn how to write OpenAPI Specification"
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth": {
      "tokenUrl": "http://auth.ibtspl.com/oauth2/",
      "flow": "password",
      "scopes": {
        "read": "read users",
        "write": "create users",
        "update": "update users",
        "delete": "delete users",
        "superuser": "superuser scope"
      },
      "type": "oauth2"
    }
  },
  "security": [
  ],
  "definitions": {
    "SaveAndActOnATaskRequestBody": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "integer"
        },
        "action_id": {
          "type": "integer"
        },
        "task_gofs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoF"
          }
        }
      },
      "required": [
        "task_gofs",
        "action_id",
        "task_id"
      ]
    },
    "InvalidTaskActionDetails": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "http_status_code": {
          "type": "integer"
        },
        "res_status": {
          "type": "string",
          "enum": [
            "INVALID_ACTION_ID",
            "INVALID_TASK_ID"
          ]
        }
      },
      "required": [
        "response",
        "http_status_code",
        "res_status"
      ]
    },
    "InvalidFilterIdResponse": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "http_status_code": {
          "type": "integer"
        },
        "res_status": {
          "type": "string",
          "enum": [
            "INVALID_FILTER_ID"
          ]
        }
      },
      "required": [
        "response",
        "http_status_code",
        "res_status"
      ]
    },
    "UserDoNotHavePermissionToFilter": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "http_status_code": {
          "type": "integer"
        },
        "res_status": {
          "type": "string",
          "enum": [
            "USER_DO_NOT_HAVE_PERMISSION_TO_FILTER"
          ]
        }
      },
      "required": [
        "response",
        "http_status_code",
        "res_status"
      ]
    },
    "AccessUnauthorized": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "http_status_code": {
          "type": "integer"
        },
        "res_status": {
          "type": "string",
          "enum": [
            "USER_DONOT_HAVE_ACCESS"
          ]
        }
      },
      "required": [
        "response",
        "http_status_code",
        "res_status"
      ]
    },
    "FieldTypeEnum": {
      "type": "object",
      "properties": {
        "field_type": {
          "type": "string",
          "enum": [
            "PLAIN_TEXT",
            "PHONE_NUMBER",
            "EMAIL",
            "URL",
            "PASSWORD",
            "NUMBER",
            "FLOAT",
            "LONG_TEXT",
            "GOF_SELECTOR",
            "RADIO_GROUP",
            "CHECKBOX_GROUP",
            "DROPDOWN",
            "IMAGE_UPLOADER",
            "FILE_UPLOADER",
            "SEARCHABLE",
            "DATE",
            "MULTI_SELECT_FIELD"
          ]
        }
      },
      "required": [
        "field_type"
      ]
    },
    "GoFField": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string",
          "example": "FIN_FIRST_NAME"
        },
        "field_response": {
          "type": "string"
        }
      },
      "required": [
        "field_id"
      ]
    },
    "GoF": {
      "type": "object",
      "properties": {
        "gof_id": {
          "type": "string"
        },
        "same_gof_order": {
          "type": "number"
        },
        "gof_fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoFField"
          }
        }
      },
      "required": [
        "gof_id",
        "same_gof_order",
        "gof_fields"
      ]
    },
    "CreateTaskRequestBody": {
      "type": "object",
      "properties": {
        "task_template_id": {
          "type": "string"
        },
        "action_id": {
          "type": "string"
        },
        "task_gofs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/GoF"
          }
        }
      },
      "required": [
        "task_gofs",
        "action_id",
        "task_template_id"
      ]
    },
    "ActionDetailsResponse": {
      "type": "object",
      "properties": {
        "action_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "button_text": {
          "type": "string"
        },
        "button_color": {
          "type": "string"
        }
      },
      "required": [
        "action_id",
        "name",
        "button_text"
      ]
    },
    "ColumnDetailsResponse": {
      "type": "object",
      "properties": {
        "column_id": {
          "type": "string"
        },
        "column_name": {
          "type": "string"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ActionDetailsResponse"
          }
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FieldsResponse"
          }
        }
      },
      "required": [
        "column_id",
        "actions",
        "fields",
        "column_name"
      ]
    },
    "FieldsResponse": {
      "type": "object",
      "properties": {
        "field_type": {
          "type": "string"
        },
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "field_type",
        "key",
        "value"
      ]
    },
    "TaskActionResponseBody": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "integer"
        },
        "current_board_details": {
          "type": "object",
          "properties": {
            "board_id": {
              "type": "string"
            },
            "board_name": {
              "type": "string"
            },
            "column_details": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ColumnDetailsResponse"
              }
            }
          },
          "required": [
            "board_id",
            "column_details",
            "board_name"
          ]
        },
        "other_board_details": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "board_id": {
                "type": "string"
              },
              "board_name": {
                "type": "string"
              },
              "column_details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "column_id": {
                      "type": "string"
                    },
                    "column_name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "column_id",
                    "column_name"
                  ]
                }
              }
            },
            "required": [
              "board_id",
              "board_name",
              "column_details"
            ]
          }
        }
      },
      "required": [
        "task_id",
        "current_board_details",
        "other_board_details"
      ]
    },
    "Field": {
      "allOf": [
        {
          "$ref": "#/definitions/FieldTypeEnum"
        },
        {
          "type": "object",
          "properties": {
            "field_id": {
              "type": "string"
            },
            "display_name": {
              "type": "string"
            },
            "is_field_required": {
              "type": "boolean"
            },
            "field_values": {
              "type": "string"
            },
            "allowed_formats": {
              "type": "string"
            },
            "validation_regex": {
              "type": "string"
            },
            "error_msg": {
              "type": "string"
            },
            "tooltip": {
              "type": "string"
            },
            "help_text": {
              "type": "string"
            },
            "placeholder_text": {
              "type": "string"
            },
            "is_field_readable": {
              "type": "boolean"
            },
            "is_field_writable": {
              "type": "boolean"
            }
          },
          "required": [
            "field_id",
            "display_name",
            "is_field_required",
            "is_field_readable",
            "is_field_writable"
          ]
        }
      ]
    },
    "GroupOfFields": {
      "type": "object",
      "properties": {
        "gof_id": {
          "type": "string"
        },
        "gof_display_name": {
          "type": "string"
        },
        "max_columns": {
          "type": "integer"
        },
        "order": {
          "type": "integer"
        },
        "enable_add_another": {
          "type": "boolean"
        },
        "fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Field"
          }
        }
      },
      "required": [
        "gof_id",
        "gof_display_name",
        "order",
        "enable_add_another",
        "max_columns",
        "fields"
      ]
    },
    "PerformActionRequestBody": {
      "type": "object",
      "properties": {
        "board_id": {
          "type": "string"
        },
        "task_id": {
          "type": "string"
        },
        "action_id": {
          "type": "string"
        }
      }
    },
    "TaskOverviewFields": {
      "allOf": [
        {
          "$ref": "#/definitions/FieldTypeEnum"
        },
        {
          "type": "object",
          "properties": {
            "field_display_name": {
              "type": "string"
            },
            "field_response": {
              "type": "string"
            }
          },
          "required": [
            "field_display_name",
            "field_response"
          ]
        }
      ]
    },
    "StagesWithActions": {
      "type": "object",
      "properties": {
        "stage_id": {
          "type": "string"
        },
        "stage_display_name": {
          "type": "string"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          }
        }
      },
      "required": [
        "stage_id",
        "stage_display_name",
        "actions"
      ]
    },
    "TaskOverviewWithStageAndActions": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "integer"
        },
        "task_overview_fields": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TaskOverviewFields"
          }
        },
        "stage_with_actions": {
          "$ref": "#/definitions/StagesWithActions"
        }
      },
      "required": [
        "task_id",
        "task_overview_fields",
        "stage_with_actions"
      ]
    },
    "Action": {
      "type": "object",
      "properties": {
        "action_id": {
          "type": "integer",
          "format": "int64"
        },
        "button_text": {
          "type": "string"
        },
        "button_color": {
          "type": "string"
        }
      },
      "required": [
        "action_id",
        "button_text",
        "button_color"
      ]
    },
    "GetTaskResponseBody": {
      "type": "object",
      "properties": {
        "task_id": {
          "type": "integer"
        },
        "template_id": {
          "type": "string"
        },
        "gofs": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "gof_id": {
                "type": "string"
              },
              "same_gof_order": {
                "type": "number"
              },
              "gof_fields": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field_id": {
                      "type": "string"
                    },
                    "field_response": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "field_id"
                  ]
                }
              }
            },
            "required": [
              "gof_id",
              "gof_fields",
              "same_gof_order"
            ]
          }
        },
        "stages_with_actions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "stage_id": {
                "type": "string"
              },
              "stage_display_name": {
                "type": "string"
              },
              "actions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "action_id": {
                      "type": "integer"
                    },
                    "button_text": {
                      "type": "string"
                    },
                    "button_color": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "action_id",
                    "button_text",
                    "button_color"
                  ]
                }
              }
            },
            "required": [
              "stage_id",
              "stage_display_name",
              "actions"
            ]
          }
        }
      },
      "required": [
        "task_id",
        "template_id",
        "gofs",
        "stages_with_actions"
      ]
    },
    "TaskTemplateFieldsResponse": {
      "type": "object",
      "properties": {
        "task_template_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "fields": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "field_id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "field_id",
              "name"
            ]
          }
        }
      },
      "required": [
        "task_template_id",
        "name",
        "fields"
      ]
    },
    "FilterCondition": {
      "type": "object",
      "properties": {
        "field_id": {
          "type": "string"
        },
        "operator": {
          "type": "string",
          "enum": [
            "EQ",
            "NE",
            "GTE",
            "GT",
            "LTE",
            "LT",
            "CONTAINS"
          ]
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "field_id",
        "operator",
        "value"
      ]
    },
    "FilterConditionWithFieldName": {
      "allOf": [
        {
          "$ref": "#/definitions/FilterCondition"
        },
        {
          "type": "object",
          "properties": {
            "field_name": {
              "type": "string"
            }
          },
          "required": [
            "field_name"
          ]
        }
      ]
    },
    "FilterDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "template_id": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterCondition"
          }
        }
      },
      "required": [
        "name",
        "conditions",
        "template_id"
      ]
    },
    "FilterDetailsWithID": {
      "allOf": [
        {
          "$ref": "#/definitions/FilterDetails"
        },
        {
          "type": "object",
          "properties": {
            "filter_id": {
              "type": "integer",
              "format": "int64"
            },
            "is_selected": {
              "type": "boolean"
            }
          },
          "required": [
            "filter_id",
            "is_selected"
          ]
        }
      ]
    },
    "FilterDetailsCompleteDetails": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "template_id": {
          "type": "string"
        },
        "template_name": {
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FilterConditionWithFieldName"
          }
        }
      },
      "required": [
        "name",
        "conditions",
        "template_id"
      ]
    }
  },
  "parameters": {
    "CreateTaskBodyParameter": {
      "in": "body",
      "name": "CreateTaskRequestBody",
      "description": "give valid details",
      "required": true,
      "schema": {
        "$ref": "#/definitions/CreateTaskRequestBody"
      }
    },
    "PerformActionBodyParameter": {
      "in": "body",
      "name": "CreateTaskRequestBody",
      "description": "give valid details",
      "required": true,
      "schema": {
        "$ref": "#/definitions/PerformActionRequestBody"
      }
    },
    "TaskParameterize": {
      "name": "task_id",
      "in": "path",
      "required": true,
      "description": "Id of the Task",
      "type": "integer"
    },
    "ActionParameterize": {
      "name": "action_id",
      "in": "path",
      "required": true,
      "description": "Id of the Action",
      "type": "string"
    },
    "BoardParameterize": {
      "name": "board_id",
      "in": "path",
      "required": true,
      "description": "Id of the Board",
      "type": "string"
    },
    "SearchableTypeParameter": {
      "name": "search_type",
      "description": "Searchable Type Parameter",
      "in": "query",
      "required": true,
      "type": "string",
      "enum": [
        "USER"
      ]
    },
    "LimitParameter": {
      "name": "limit",
      "description": "Limit Parameter",
      "in": "query",
      "type": "integer",
      "required": true
    },
    "OffsetParameter": {
      "name": "offset",
      "description": "Offset Parameter",
      "in": "query",
      "type": "integer",
      "required": true
    },
    "SearchableQueryParameter": {
      "name": "search_query",
      "description": "Searchable Query Parameter",
      "in": "query",
      "required": true,
      "type": "string"
    },
    "SaveAndActOnATaskBodyParameter": {
      "in": "body",
      "name": "SaveAndActOnATaskRequestBody",
      "description": "give valid details",
      "required": true,
      "schema": {
        "$ref": "#/definitions/SaveAndActOnATaskRequestBody"
      }
    },
    "SelectFilterRequestBody": {
      "in": "body",
      "name": "select_filter_status",
      "description": "select filter status",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "filter_id": {
            "type": "integer"
          },
          "is_selected": {
            "type": "boolean"
          }
        },
        "required": [
          "filter_id",
          "is_selected"
        ]
      }
    },
    "CreateFilterBodyParameter": {
      "in": "body",
      "name": "CreateFilterBodyParameter",
      "description": "create filter details",
      "required": true,
      "schema": {
        "$ref": "#/definitions/FilterDetails"
      }
    },
    "UpdateFilterBodyParameter": {
      "in": "body",
      "name": "UpdateFilterBodyParameter",
      "description": "update filter details",
      "required": true,
      "schema": {
        "$ref": "#/definitions/FilterDetails"
      }
    },
    "UpdateFilterPathParameter": {
      "name": "filter_id",
      "in": "path",
      "required": true,
      "description": "Id of the filter",
      "type": "integer",
      "format": "int64"
    },
    "DeleteFilterPathParameter": {
      "name": "filter_id",
      "in": "path",
      "required": true,
      "description": "Id of the filter",
      "type": "integer",
      "format": "int64"
    }
  },
  "responses": {
    "CreateTaskSuccessResponse": {
      "description": "task created successfully"
    },
    "TaskTemplatesDoesNotExistsResponse": {
      "description": "No task templates exists",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "TASK_TEMPLATES_DOES_NOT_EXISTS"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "GetTaskTemplateResponse": {
      "description": "OK",
      "schema": {
        "type": "object",
        "properties": {
          "task_templates": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "template_id": {
                  "type": "string"
                },
                "template_name": {
                  "type": "string"
                },
                "actions": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Action"
                  }
                },
                "group_of_fields": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/GroupOfFields"
                  }
                }
              },
              "required": [
                "template_id",
                "template_name",
                "actions",
                "group_of_fields"
              ]
            }
          }
        },
        "required": [
          "task_templates"
        ]
      }
    },
    "GetTaskSuccessResponse": {
      "description": "Success",
      "schema": {
        "$ref": "#/definitions/GetTaskResponseBody"
      }
    },
    "GetTaskFailureResponse": {
      "description": "get task failure response",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer",
            "example": 404
          },
          "res_status": {
            "type": "string",
            "enum": [
              "INVALID_TASK_ID"
            ]
          }
        }
      }
    },
    "AllTasksOverviewResponse": {
      "description": "Ok",
      "schema": {
        "type": "object",
        "properties": {
          "tasks": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TaskOverviewWithStageAndActions",
              "required": [
                "tasks"
              ]
            }
          },
          "total_tasks": {
            "type": "integer"
          }
        },
        "required": [
          "tasks",
          "total_tasks"
        ]
      }
    },
    "SearchableValuesResponse": {
      "description": "OK",
      "schema": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          },
          "required": [
            "id",
            "name"
          ]
        }
      }
    },
    "AllTasksOverviewFailureResponse": {
      "description": "All Tasks Overview Failure Response",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer",
            "enum": [
              400
            ]
          },
          "res_status": {
            "type": "string",
            "enum": [
              "LIMIT_SHOULD_BE_GREATER_THAN_ZERO",
              "OFFSET_SHOULD_BE_GREATER_THAN_ZERO",
              "EMPTY_STAGE_IDS_ARE_INVALID"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "SearchableValuesFailureResponse": {
      "description": "Searchable Values Failure Response",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer",
            "enum": [
              400
            ]
          },
          "res_status": {
            "type": "string",
            "enum": [
              "LIMIT_SHOULD_BE_GREATER_THAN_ZERO",
              "OFFSET_SHOULD_BE_GREATER_THAN_OR_EQUAL_TO_MINUS_ONE"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "SaveAndActOnATaskTaskSuccessResponse": {
      "description": "task updated successfully"
    },
    "GetTaskTemplateFieldsResponse": {
      "description": "Get Task Template Fileds Response",
      "schema": {
        "type": "object",
        "properties": {
          "task_template_fields_details": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/TaskTemplateFieldsResponse"
            }
          },
          "operators": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "GTE",
                "LTE",
                "GT",
                "LE",
                "NE",
                "EQ",
                "CONTAINS"
              ]
            }
          }
        },
        "required": [
          "task_template_fields_details",
          "operators"
        ]
      }
    },
    "FilterDetailsResponse": {
      "description": "filter details",
      "schema": {
        "$ref": "#/definitions/FilterDetailsCompleteDetails"
      }
    },
    "FilterFailedResponse": {
      "description": "creating filter is failed",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "TASK_TEMPLATES_DOES_NOT_EXISTS",
              "FIELDS_DOES_NOT_EXIST"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "InvalidFilterValueResponse": {
      "description": "value empty response",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "VALUE_SHOULD_NOT_BE_EMPTY"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "UserNotBelongsToResponse": {
      "description": "user not belongs to filter",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "USER_NOT_HAVE_PERMISSIONS_TO_UPDATE"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "FieldNotBelongsToTaskTemplate": {
      "description": "fields not belongs to task template",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "FIELDS_NOT_BELONGS_TASK_TEMPLATE"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "DeleteFailedResponse": {
      "description": "deleting filter is failed",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "USER_NOT_HAVE_PERMISSIONS_TO_DELETE"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "FieldNotExistResponse": {
      "description": "deleting filter is failed",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "INVALID_FILTER_ID"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    },
    "FieldAndUserForbiddenResponse": {
      "description": "fields not belongs to task template",
      "schema": {
        "type": "object",
        "properties": {
          "response": {
            "type": "string"
          },
          "http_status_code": {
            "type": "integer"
          },
          "res_status": {
            "type": "string",
            "enum": [
              "FIELDS_NOT_BELONGS_TASK_TEMPLATE",
              "USER_NOT_HAVE_PERMISSIONS_TO_UPDATE"
            ]
          }
        },
        "required": [
          "response",
          "http_status_code",
          "res_status"
        ]
      }
    }
  },
  "paths": {
    "/perform_user_action_on_task/v1/": {
      "post": {
        "operationId": "perform_task_action",
        "summary": "User Act On Specific Task in a Column",
        "description": "User Submitting Response by acting on a task",
        "parameters": [
          {
            "$ref": "#/parameters/PerformActionBodyParameter"
          }
        ],
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "$ref": "#/definitions/TaskActionResponseBody"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/AccessUnauthorized"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/InvalidTaskActionDetails"
            }
          }
        }
      }
    },
    "/task_templates/v1/": {
      "get": {
        "operationId": "get_task_templates",
        "summary": "Get list of task templates along with group of fields",
        "description": "Get list of task templates along with group of fields",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetTaskTemplateResponse"
          },
          "404": {
            "$ref": "#/responses/TaskTemplatesDoesNotExistsResponse"
          }
        }
      }
    },
    "/task/v1/": {
      "post": {
        "operationId": "create_task",
        "summary": "create a task",
        "description": "create a task with given details",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/CreateTaskBodyParameter"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/CreateTaskSuccessResponse"
          },
          "400": {
            "description": ""
          }
        }
      },
      "get": {
        "operationId": "get_task",
        "summary": "get task",
        "description": "get task details",
        "security": [
          {
            "oauth": [
              "write",
              "read"
            ]
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "query",
            "description": "task id to get task details",
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetTaskSuccessResponse"
          },
          "404": {
            "$ref": "#/responses/GetTaskFailureResponse"
          }
        }
      }
    },
    "/field_search/v1/": {
      "get": {
        "operationId": "get_searchable_values",
        "summary": "get searchable values based on search type",
        "description": "get searchable values based on search type given a query",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SearchableTypeParameter"
          },
          {
            "$ref": "#/parameters/LimitParameter"
          },
          {
            "$ref": "#/parameters/OffsetParameter"
          },
          {
            "$ref": "#/parameters/SearchableQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/SearchableValuesResponse"
          },
          "400": {
            "$ref": "#/responses/SearchableValuesFailureResponse"
          }
        }
      }
    },
    "/tasks_overview/v1/": {
      "get": {
        "operationId": "get_all_tasks_overview",
        "summary": "get all tasks overview",
        "description": "get all tasks overview in home page",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LimitParameter"
          },
          {
            "$ref": "#/parameters/OffsetParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AllTasksOverviewResponse"
          },
          "400": {
            "$ref": "#/responses/AllTasksOverviewFailureResponse"
          }
        }
      }
    },
    "/task/save_and_act/v1/": {
      "post": {
        "operationId": "save_and_act_on_a_task",
        "summary": "update a task",
        "description": "create a task with given details",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SaveAndActOnATaskBodyParameter"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/SaveAndActOnATaskTaskSuccessResponse"
          },
          "400": {
            "description": ""
          }
        }
      }
    },
    "/task_templates_fields/v1/": {
      "get": {
        "operationId": "get_task_templates_fields_details",
        "summary": "Get Task Templates Fields Details",
        "description": "Get Task Templates Fileds Details",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetTaskTemplateFieldsResponse"
          }
        }
      }
    },
    "/filter/select/v1/": {
      "put": {
        "operationId": "select_filter",
        "summary": "update filter status",
        "description": "Update filter selected status",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/SelectFilterRequestBody"
          }
        ],
        "responses": {
          "200": {
            "description": "successful",
            "schema": {
              "type": "object",
              "properties": {
                "filter_id": {
                  "type": "integer"
                },
                "is_selected": {
                  "type": "boolean"
                }
              },
              "required": [
                "filter_id",
                "is_selected"
              ]
            }
          },
          "403": {
            "description": "forbidden",
            "schema": {
              "$ref": "#/definitions/InvalidFilterIdResponse"
            }
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/UserDoNotHavePermissionToFilter"
            }
          }
        }
      }
    },
    "/filters/v1/": {
      "post": {
        "operationId": "create_filter",
        "summary": "create filter",
        "description": "create filter with given details",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/CreateFilterBodyParameter"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/FilterDetailsResponse"
          },
          "404": {
            "$ref": "#/responses/FilterFailedResponse"
          },
          "417": {
            "$ref": "#/responses/InvalidFilterValueResponse"
          },
          "403": {
            "$ref": "#/responses/FieldNotBelongsToTaskTemplate"
          }
        }
      },
      "get": {
        "summary": "get filters",
        "operationId": "get_filters",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "description": "Field details",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/FilterDetailsCompleteDetails"
              }
            }
          }
        }
      }
    },
    "/filters/{filter_id}/v1/": {
      "put": {
        "operationId": "update_filter",
        "summary": "update filter",
        "description": "update filter with given details",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/UpdateFilterBodyParameter"
          },
          {
            "$ref": "#/parameters/UpdateFilterPathParameter"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/FilterDetailsResponse"
          },
          "404": {
            "$ref": "#/responses/FilterFailedResponse"
          },
          "417": {
            "$ref": "#/responses/InvalidFilterValueResponse"
          },
          "403": {
            "$ref": "#/responses/FieldAndUserForbiddenResponse"
          }
        }
      },
      "delete": {
        "summary": "delete filter",
        "operationId": "delete_filter",
        "security": [
          {
            "oauth": [
              "write",
              "delete"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DeleteFilterPathParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "filter deleted"
          },
          "404": {
            "$ref": "#/responses/FieldNotExistResponse"
          },
          "403": {
            "$ref": "#/responses/DeleteFailedResponse"
          }
        }
      }
    }
  }
}