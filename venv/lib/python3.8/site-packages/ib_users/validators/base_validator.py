import abc

from ib_users.exceptions.custom_exception_constants import \
    ExceptionMessageDTO


class CustomException(Exception):
    def __init__(self, message, exception_type):
        super(CustomException, self).__init__(message)
        self.error_type = exception_type
        self.error_message = message

    @classmethod
    def from_exception_message_and_code(cls, message, exception_type):
        return CustomException(message, exception_type)

    @classmethod
    def from_exception_message_DTO(cls,
                                   exception_message_DTO: ExceptionMessageDTO):
        return CustomException(
            exception_message_DTO.message,
            exception_message_DTO.code)


class BaseValidator:
    __metaclass__ = abc.ABCMeta

    @classmethod
    def get_validator_with_limit_value(cls,
                                       validator_type,
                                       limit_value: int,
                                       exception_message_DTO: ExceptionMessageDTO):
        validator = validator_type(limit_value=limit_value,
                                   message=exception_message_DTO.message)
        validator.code = exception_message_DTO.code
        return validator

    @classmethod
    @abc.abstractmethod
    def validate(cls, value):
        pass
