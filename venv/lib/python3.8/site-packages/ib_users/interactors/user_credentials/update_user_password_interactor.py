from ib_users.interactors.storages import UserAccountsStorage
from ib_users.interactors.user_credentials.exceptions \
    .user_credentials_exceptions import \
    InvalidNewPasswordException, InvalidCurrentPasswordException
from ib_users.validators import PasswordValidator
from ib_users.validators.base_validator import CustomException


class UpdateUserPasswordInteractor:
    def __init__(self, storage: UserAccountsStorage):
        self.storage = storage

    def update_user_password(self, user_id: str, current_password: str,
    new_password: str):
        try:
            PasswordValidator.validate(new_password)
        except CustomException:
            raise InvalidNewPasswordException
        try:
            PasswordValidator.validate(current_password)
        except CustomException:
            raise InvalidCurrentPasswordException

        self.storage.check_current_password_matches(
            user_id=user_id, current_password=current_password)
        self.storage.update_user_password(user_id=user_id,
                                          new_password=new_password)