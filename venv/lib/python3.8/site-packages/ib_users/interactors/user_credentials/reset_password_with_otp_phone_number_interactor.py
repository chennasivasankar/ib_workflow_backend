from ib_users.interactors.storages import UserAccountsStorage
from ib_users.interactors.third_party.otp_service import OTPService
from ib_users.interactors.user_credentials.DTOs.user_credentials_dtos import \
    ResetPasswordWithOTPPhoneNumberDTO
from ib_users.interactors.validators.phone_number_validator import \
    PhoneNumberValidator
from ib_users.validators import PasswordValidator


class ResetPasswordWithOTPPhoneNumberInteractor:
    def __init__(self,
                 storage: UserAccountsStorage,
                 otp_service: OTPService,
                 phone_number_validator: PhoneNumberValidator):
        self.storage = storage
        self.otp_service = otp_service
        self.phone_number_validator = phone_number_validator

    def reset_password_with_otp_phone_number(
            self, reset_password_dto: ResetPasswordWithOTPPhoneNumberDTO):
        self.phone_number_validator.validate(reset_password_dto)
        PasswordValidator.validate(reset_password_dto.new_password)
        user = self.storage.get_user_given_phone_number(
            phone_number_dto=reset_password_dto)
        self.otp_service.validate_otp_send_to_phone_number(
            phone_number_dto=reset_password_dto, otp=reset_password_dto.otp)
        self.storage.update_user_password(
            user_id=user.user_id,
            new_password=reset_password_dto.new_password)