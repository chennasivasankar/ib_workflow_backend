from ib_users.interactors.storages import UserAccountsStorage
from ib_users.interactors.third_party.otp_service import OTPService
from ib_users.interactors.user_credentials.DTOs.user_credentials_dtos import \
    ResetPasswordWithOTPEmailDTO
from ib_users.validators import EmailValidator, PasswordValidator


class ResetPasswordWithOTPEmailInteractor:
    def __init__(
            self, storage: UserAccountsStorage, otp_service: OTPService):
        self.storage = storage
        self.otp_service = otp_service

    def reset_password_with_otp_email(
            self, reset_password_dto: ResetPasswordWithOTPEmailDTO):
        EmailValidator.validate(reset_password_dto.email)
        PasswordValidator.validate(reset_password_dto.new_password)
        user = self.storage.get_user_given_email(
            email=reset_password_dto.email)
        self.otp_service.validate_otp_send_to_email(
            email=reset_password_dto.email, otp=reset_password_dto.otp)
        self.storage.update_user_password(
            user_id=user.user_id, new_password=reset_password_dto.new_password)