import abc
from typing import List

from ib_users.interactors.user_profile_interactor import GetUserProfileDTO, \
    UserProfileDTO, CreateUserProfileDTO


class UserProfileStorage:
    @abc.abstractmethod
    def get_user_profile(self, user_id: int) -> GetUserProfileDTO:
        pass

    @abc.abstractmethod
    def get_user_profiles(self, user_ids: List[int]) -> \
            List[GetUserProfileDTO]:
        pass

    @abc.abstractmethod
    def update_user_profile(self, user_id: int,
                            update_profile_data: UserProfileDTO):
        pass

    @abc.abstractmethod
    def get_user_country_code_and_phone_number(
            self, user_id: int) -> (str, str):
        pass

    @abc.abstractmethod
    def update_user_phone_number_verified(self, user_id: str):
        pass

    @abc.abstractmethod
    def get_user_email(self, user_id: str) -> str:
        pass

    @abc.abstractmethod
    def update_user_email_verified(self, user_id: str):
        pass

    @abc.abstractmethod
    def does_user_exists(self, user_id: str) -> bool:
        pass

    @abc.abstractmethod
    def is_any_user_id_invalid(self, user_ids: List[str]) -> bool:
        pass

    @abc.abstractmethod
    def create_user_profile(self, user_profile: CreateUserProfileDTO,
                            account_id: str) -> int:
        pass
