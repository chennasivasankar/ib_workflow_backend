from ib_users.constants.exception_constants import ExceptionConstants


class CurrentPasswordMismatchException(Exception):
    def __init__(self, message=ExceptionConstants.CURRENT_PASSWORD_MISMATCH):
        super(CurrentPasswordMismatchException, self).__init__(message)
        self.message = message


class InvalidUserIdException(Exception):
    def __init__(self, message=ExceptionConstants.INVALID_USER_ID):
        super(InvalidUserIdException, self).__init__(message)
        self.message = message


class AccountWithUsernameDoesntExistException(Exception):
    def __init__(self,
                 message=ExceptionConstants.ACCOUNT_WITH_USERNAME_DOESNT_EXIST):
        super(AccountWithUsernameDoesntExistException, self).__init__(message)
        self.message = message


class AccountWithEmailDoesntExistException(Exception):
    def __init__(self,
                 message=ExceptionConstants.ACCOUNT_WITH_EMAIL_DOESNT_EXIST):
        super(AccountWithEmailDoesntExistException, self).__init__(message)
        self.message = message


class AccountWithPhoneNumberDoesntExistException(Exception):
    def __init__(self,
                 message=ExceptionConstants.ACCOUNT_WITH_PHONE_NUMBER_DOESNT_EXIST):
        super(AccountWithPhoneNumberDoesntExistException, self).__init__(
            message)
        self.message = message


class InvalidTokenException(Exception):
    def __init__(self, message=ExceptionConstants.INVALID_TOKEN):
        super(InvalidTokenException, self).__init__(message)
        self.message = message


class TokenExpiredException(Exception):
    def __init__(self, message=ExceptionConstants.TOKEN_EXPIRED):
        super(TokenExpiredException, self).__init__(message)
        self.message = message


class ContactDetailsNotPresentException(Exception):
    def __init__(self, message=ExceptionConstants.CONTACT_DETAILS_NOT_PRESENT):
        super(ContactDetailsNotPresentException, self).__init__(message)
        self.message = message