from ib_users.interactors.third_party.user_tokens_generator import \
    UserAuthTokensGenerator
from ib_users.interactors.storages.user_login_device_details_storage import \
    UserDeviceLoginDTO, UserLoginDeviceDetailsStorage
from ib_users.validators.device_id_validator_impl import DeviceIdValidatorImpl


class LogoutFromADevice:
    def __init__(self, storage: UserLoginDeviceDetailsStorage,
                 user_auth_tokens_generator: UserAuthTokensGenerator):
        self.storage = storage
        self.user_auth_tokens_generator = user_auth_tokens_generator

    def logout(self, user_logout_dto: UserDeviceLoginDTO):
        DeviceIdValidatorImpl.validate(user_logout_dto.device_id)
        self.storage.check_if_given_login_device_details_mapping_exists(
            user_logout_dto)
        self.user_auth_tokens_generator.expire_all_auth_tokens_related_to_given_access_token(
            user_logout_dto.access_token)
        self.storage.remove_given_user_and_device_mapping(
            user_logout_dto)
