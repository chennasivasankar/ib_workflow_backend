from ib_users.interactors.storages.otp_blacklist_storage import \
    OTPBlacklistStorage
from ib_users.constants.otp_verification_constants import OTP_LENGTH, \
    VerificationType
from ib_users.exceptions.otp_verification_exceptions import ExceptionMessage, \
    ErrorType, PhoneNumberIsBlackListedException, EmailIsBlackListedException
from ib_users.interactors.storages.otp_verification_storage import \
    OTPVerificationStorage
from ib_users.utils.dtos import PhoneNumberDTO


class BaseOTPVerificationInteractor:
    def __init__(self,
                 storage: OTPVerificationStorage,
                 otp_blacklist_storage: OTPBlacklistStorage,
                 verification_type: VerificationType):
        self.storage = storage
        self.otp_blacklist_storage = otp_blacklist_storage
        self.verification_type = verification_type

    @staticmethod
    def _generate_otp() -> str:
        digits = "0123456789"
        otp = ""
        import math, random
        for i in range(OTP_LENGTH):
            otp += digits[math.floor(random.random() * 10)]
        return otp

    def _check_and_throw_exception_if_phone_number_is_blacklisted(
                                      self, phone_number_dto: PhoneNumberDTO):
        is_black_listed = self.otp_blacklist_storage.\
            is_phone_number_blacklisted(
                phone_number_dto=phone_number_dto
            )
        if is_black_listed:
            raise PhoneNumberIsBlackListedException(
                ExceptionMessage.GIVEN_PHONE_NUMBER_IS_BLACK_LISTED,
                ErrorType.PHONE_NUMBER_BLACKLISTED
            )

    def _check_and_throw_exception_if_email_is_blacklisted(
                                       self, email: str):
        is_black_listed = self.otp_blacklist_storage.is_email_blacklisted(
                email=email
        )
        if is_black_listed:
            raise EmailIsBlackListedException(
                ExceptionMessage.GIVEN_EMAIL_IS_BLACK_LISTED,
                ErrorType.EMAIL_BLACKLISTED
            )
