from typing import List

from ib_users.exceptions.otp_verification_exceptions import ExceptionMessage, \
    ErrorType, PhoneNumberIsBlackListedException, EmailIsBlackListedException
from ib_users.utils.dtos import PhoneNumberDTO
from ib_users.interactors.storages.otp_blacklist_storage import \
    OTPBlacklistStorage


class BlacklistInteractor:
    def __init__(self, storage: OTPBlacklistStorage):
        self.storage=storage

    def blacklist_phone_number(self, phone_number_dto: PhoneNumberDTO):
        self._check_and_throw_exception_if_phone_number_is_blacklisted(
            phone_number_dto=phone_number_dto
        )
        self.storage.add_phone_number_to_black_list(
            phone_number_dto=phone_number_dto
        )

    def blacklist_email(self, email: str):
        self._check_and_throw_exception_if_email_is_blacklisted(
            email=email
        )
        self.storage.add_email_to_blacklist(email=email)

    def remove_phone_numbers_from_blacklist(self,
                                    phone_number_dtos: List[PhoneNumberDTO]):
        self.storage.remove_phone_numbers_from_blacklist(
            phone_number_dtos=phone_number_dtos
        )

    def remove_emails_from_blacklist(self, emails: List[str]):
        self.storage.remove_emails_from_blacklist(emails=emails)

    def _check_and_throw_exception_if_phone_number_is_blacklisted(self,
                                            phone_number_dto: PhoneNumberDTO):
        is_black_listed = self.storage.is_phone_number_blacklisted(
            phone_number_dto=phone_number_dto
        )
        if is_black_listed:
            raise PhoneNumberIsBlackListedException(
                ExceptionMessage.GIVEN_PHONE_NUMBER_IS_BLACK_LISTED,
                ErrorType.PHONE_NUMBER_BLACKLISTED
            )

    def _check_and_throw_exception_if_email_is_blacklisted(self,
                                            email: str):
        is_black_listed = self.storage.is_email_blacklisted(
            email=email
        )
        if is_black_listed:
            raise EmailIsBlackListedException(
                ExceptionMessage.GIVEN_EMAIL_IS_BLACK_LISTED,
                ErrorType.EMAIL_BLACKLISTED
            )
