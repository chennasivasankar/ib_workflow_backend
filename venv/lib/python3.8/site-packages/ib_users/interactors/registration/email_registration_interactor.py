from ib_users.interactors.registration.DTOs.registration_dtos import \
    CreateAccountWithEmailDTO
from ib_users.interactors.registration.registration_helper import RegistrationHelper


from ib_users.validators import EmailValidator, PasswordValidator


class EmailRegistrationInteractor(RegistrationHelper):
    def create_account_with_email(self,
                                  create_account_dto:CreateAccountWithEmailDTO
                                  ):
        EmailValidator.validate(create_account_dto.email)

        if create_account_dto.username is not None:
            self.validate_username(create_account_dto.username)

        self.check_email_is_registered(create_account_dto.email)

        PasswordValidator.validate(create_account_dto.password)

        user_id = self.accounts_storage.create_account_with_email(
            create_account_dto)
        return self.presenter.get_user_id(user_id)

    def check_email_is_registered(self, email):
        self.accounts_storage.check_user_exists_with_email(email)
