from dataclasses import dataclass

from ib_users.interactors.login.base_login import BaseLogin
from ib_users.interactors.storages import UserAccountsStorage
from ib_users.interactors.third_party.otp_service import OTPService
from ib_users.validators import EmailValidator


@dataclass
class EmailAndOTPDTO:
    email: str
    otp: str


class LoginWithEmailAndOTP(BaseLogin):

    def __init__(self,
                 storage: UserAccountsStorage,
                 otp_service: OTPService):
        super().__init__(storage)
        self.otp_service = otp_service

    def get_user_id_for_given_login_data(self,
                                         email_login_dto: EmailAndOTPDTO):
        EmailValidator.validate(email_login_dto.email)

        user_id = self.storage.get_user_id_given_email(email_login_dto.email)
        super().validate_user_account_for_active_state(user_id)
        self.otp_service.validate_otp_send_to_email(
            email=email_login_dto.email,
            otp=email_login_dto.otp)
        return user_id

