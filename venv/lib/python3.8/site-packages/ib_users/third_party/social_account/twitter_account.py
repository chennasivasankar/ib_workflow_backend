from twython import Twython, TwythonAuthError
from django.conf import settings

from ib_users.constants.user_account_constants import \
    SocialAccountProviderType
from ib_users.exceptions.social_service_exceptions import \
    InvalidSocialAccessToken
from ib_users.interactors.third_party.social_account import SocialAccount
from ib_users.exceptions.user_account_exceptions import InvalidAction
from ib_users.exceptions.custom_exception_constants import ExceptionMessages


class TwitterAccount(SocialAccount):
    def check_and_throw_exception_if_given_string_is_empty(self, string: str):
        if not string:
            raise InvalidAction(ExceptionMessages.SOCIAL_ACCESS_TOKEN_IS_EMPTY.
                                format(SocialAccountProviderType.TWITTER.value))

    def get_social_account_type(self) -> SocialAccountProviderType:
        return SocialAccountProviderType.TWITTER.value

    def get_social_id(self, **kwargs) -> str:
        twitter_config = settings.TWITTER
        app_key = twitter_config['app_key']
        app_secret = twitter_config['app_secret']

        twitter = Twython(
            app_key=app_key,
            app_secret=app_secret,
            oauth_token=kwargs['access_token'],
            oauth_token_secret=kwargs['secret_token']
        )
        try:
            user = twitter.verify_credentials()
        except TwythonAuthError:
            raise InvalidSocialAccessToken.\
                get_for_invalid_twitter_token_exception()
        return user['id_str']
