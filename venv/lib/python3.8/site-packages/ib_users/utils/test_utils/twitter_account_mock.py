from ib_users.constants.user_account_constants import \
    SocialAccountProviderType
from ib_users.exceptions.custom_exception_constants import ExceptionMessages
from ib_users.exceptions.user_account_exceptions import InvalidAction
from ib_users.interactors.third_party.social_account import SocialAccount


class TwitterAccountMock(SocialAccount):
    def check_and_throw_exception_if_given_string_is_empty(self, string: str):
        if not string:
            raise InvalidAction(
                ExceptionMessages.SOCIAL_ACCESS_TOKEN_IS_EMPTY
                    .format(SocialAccountProviderType.TWITTER.value)
            )

    def get_social_account_type(self) -> SocialAccountProviderType:
        return SocialAccountProviderType.TWITTER.value

    def get_social_id(self, **kwargs) -> str:
        return "social_id_3"
