from rest_framework import serializers

from django_swagger_utils.drf_server.utils.decorator.deserialize import deserialize
from django_swagger_utils.drf_server.utils.server_gen.type_file_utils import get_type_object
from django_swagger_utils.drf_server.utils.server_gen.type_file_utils import get_type_list_object
from django_swagger_utils.drf_server.fields.collection_format_field import CollectionFormatField


class BaseUserProfileType(object):
    def __init__(self, name=None, gender=None, dob=None, profile_pic_url=None, phone_number=None, country_code=None, email=None, language_preference=None,  **kwargs):
        self.name = name
        self.gender = gender
        self.dob = dob
        self.profile_pic_url = profile_pic_url
        self.phone_number = phone_number
        self.country_code = country_code
        self.email = email
        self.language_preference = language_preference

    def __str__(self):
        from django_swagger_utils.drf_server.utils.server_gen.get_unicode_str import get_unicode_str
        return get_unicode_str(self).encode('utf-8')

    def __getitem__(self, item):
        return getattr(self, item)


class BaseUserProfileSerializer(serializers.Serializer):
    name = serializers.CharField(required=False, allow_blank=True, allow_null=True)
    gender = serializers.ChoiceField(choices=(('MALE', 'MALE'), ('FEMALE', 'FEMALE'), ('OTHER', 'OTHER')), required=False, allow_blank=True, allow_null=True)
    dob = serializers.DateField(required=False, allow_null=True)
    profile_pic_url = serializers.CharField(required=False, allow_blank=True, allow_null=True)
    phone_number = serializers.CharField(required=False, allow_blank=True, allow_null=True)
    country_code = serializers.CharField(required=False, allow_blank=True, allow_null=True)
    email = serializers.CharField(required=False, allow_blank=True, allow_null=True)
    language_preference = serializers.ChoiceField(choices=(('ENGLISH', 'ENGLISH'), ('TELUGU', 'TELUGU')), required=False, allow_blank=True, allow_null=True)

    def create(self, validated_data):
        return BaseUserProfileType(**validated_data)
