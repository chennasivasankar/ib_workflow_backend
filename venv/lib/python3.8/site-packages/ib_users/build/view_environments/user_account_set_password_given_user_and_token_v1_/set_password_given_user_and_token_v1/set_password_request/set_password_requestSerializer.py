from ib_users.build.serializers.definitions.UserId.UserIdSerializer import UserIdSerializer
from ib_users.build.serializers.definitions.UserId.UserIdSerializer import UserIdType
from ib_users.build.view_environments.user_account_set_password_given_user_and_token_v1_.set_password_given_user_and_token_v1.set_password_request.set_password_request.Schema1.Schema1Serializer import Schema1Serializer
from ib_users.build.view_environments.user_account_set_password_given_user_and_token_v1_.set_password_given_user_and_token_v1.set_password_request.set_password_request.Schema1.Schema1Serializer import Schema1Type

from django_swagger_utils.drf_server.utils.decorator.deserialize import deserialize

class set_password_requestType(UserIdType, Schema1Type):
    def __init__(self, **validated_data):
        UserIdType.__init__(self, **validated_data)
        Schema1Type.__init__(self, **validated_data)
        

class set_password_requestSerializer(UserIdSerializer, Schema1Serializer):
    def create(self, validated_data):
        
        userIdSerializer, _ = deserialize(UserIdSerializer, validated_data, many=False, partial=True)
        validated_data.update(userIdSerializer.__dict__)
        
        schema1Serializer, _ = deserialize(Schema1Serializer, validated_data, many=False, partial=True)
        validated_data.update(schema1Serializer.__dict__)
        
        return set_password_requestType(**validated_data)
