from django_swagger_utils.drf_server.exceptions import NotFound

from ib_users.interactors.presenters import UserLoginPresenter
from ib_users.interactors.third_party.user_tokens_generator import \
    UserAuthTokensDTO


class UserLoginJSONPresenter(UserLoginPresenter):
    def get_user_login_response(self, user_tokens: UserAuthTokensDTO):
        # TODO : write DTO to JSON converter and use it
        response_json = dict(
            user_id=user_tokens.user_id,
            access_token=user_tokens.access_token,
            refresh_token=user_tokens.refresh_token,
            expires_in=user_tokens.expires_in
        )
        return response_json

    @staticmethod
    def raise_exception_for_invalid_access_token():
        from ib_users.constants.custom_exception_messages import \
            INVALID_ACCESS_TOKEN
        raise NotFound(
            message=INVALID_ACCESS_TOKEN.message,
            res_status=INVALID_ACCESS_TOKEN.code
        )
