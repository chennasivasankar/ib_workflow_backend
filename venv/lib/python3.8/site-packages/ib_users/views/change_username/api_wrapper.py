from django_swagger_utils.drf_server.utils.decorator.interface_decorator \
    import validate_decorator

from ib_users.storages import UserAccountsSQLStorage
from ib_users.storages.user_social_account_sql_storage import \
    UserSocialAccountsSQLStorage
from ib_users.validators.base_validator import CustomException
from .validator_class import ValidatorClass


@validate_decorator(validator_class=ValidatorClass)
def api_wrapper(*args, **kwargs):
    user = kwargs['user']
    request_data = kwargs['request_data']
    new_username = request_data['new_username']

    from ib_users.interactors.user_account_interactor import \
        UserAccountInteractor

    from ib_users.presenters.user_account_json_presenter import \
        UserAccountJSONPresenter

    storage = UserAccountsSQLStorage()

    presenter = UserAccountJSONPresenter()
    user_account_interactor = UserAccountInteractor(
        account_storage=storage,
        social_account_storage=UserSocialAccountsSQLStorage())

    from ib_users.exceptions.user_account_exceptions import \
        UsernameDoesNotExist, InvalidUsername, UsernameAlreadyExists
    from django_swagger_utils.drf_server.exceptions import BadRequest

    try:
        change_username_response = user_account_interactor.change_username(
            current_username=user.username,
            new_username=new_username,
            presenter=presenter
        )
    except UsernameDoesNotExist as exception:
        raise BadRequest(message=exception.message,
                         res_status=exception.error_type)
    except InvalidUsername as exception:
        raise BadRequest(message=exception.message,
                         res_status=exception.error_type)
    except UsernameAlreadyExists as exception:
        raise BadRequest(message=exception.message,
                         res_status=exception.error_type)
    except CustomException as exception:
        raise BadRequest(message=exception.error_message,
                         res_status=exception.error_type)

    return change_username_response
