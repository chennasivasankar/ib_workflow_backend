from django_swagger_utils.drf_server.utils.decorator.interface_decorator \
    import validate_decorator
from ib_users.constants.res_status_constants import ResStatusConstants
from ib_users.constants.user_account_constants import UserAccountConstants
from ib_users.exceptions.registration_exceptions import \
    UsernameAlreadyExistsException
from ib_users.interactors.registration.username_registration_interactor import \
    UsernameRegistrationInteractor
from ib_users.presenters.registration_json_presenter import \
    RegistrationJSONPresenter
from ib_users.storages import UserAccountsSQLStorage
from ib_users.validators.base_validator import CustomException
from .validator_class import ValidatorClass
from django_swagger_utils.drf_server.exceptions import BadRequest


@validate_decorator(validator_class=ValidatorClass)
def api_wrapper(*args, **kwargs):
    request_data = kwargs['request_data']
    username = request_data['username']
    password = request_data.get("password",
                                UserAccountConstants.DEFAULT_PASSWORD)

    interactor = UsernameRegistrationInteractor(
        accounts_storage=UserAccountsSQLStorage(),
        presenter=RegistrationJSONPresenter())

    try:
        return interactor.create_account_with_username(
            username=username, password=password)

    except CustomException as exception:
        raise BadRequest(message=exception.error_message,
                   res_status=exception.error_type)
    except UsernameAlreadyExistsException as exception:
        raise BadRequest(message=exception.message,
                   res_status=ResStatusConstants.USERNAME_ALREADY_USED)