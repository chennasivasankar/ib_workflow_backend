from django_swagger_utils.drf_server.utils.decorator.interface_decorator \
    import validate_decorator

from ib_users.interactors.exceptions.user_profile import EmailAlreadyLinkedException
from .validator_class import ValidatorClass


@validate_decorator(validator_class=ValidatorClass)
def api_wrapper(*args, **kwargs):

    request_user_profile = kwargs['request_data']
    user = kwargs['user']

    from ib_users.interactors.user_profile_interactor import \
        UserProfileInteractor
    from ib_users.storages.user_profile_sql_storage import \
        UserProfileSQLStorage
    from ib_users.interactors.exceptions.user_profile import \
        PhoneNumberOrCountryCodeInvalidException, InvalidUserException

    from ib_users.exceptions.invalid_gender_exception import \
        InvalidGenderException
    from ib_users.exceptions.invalid_language_exception import \
        InvalidLanguageException

    from ib_users.exceptions.invalid_dob_exception import InvalidDOBException
    from ib_users.exceptions.invalid_email_exception import \
        InvalidEmailException
    from ib_users.exceptions.invalid_phone_number_exception import \
        InvalidPhoneNumberException
    from ib_users.storages import UserAccountsSQLStorage

    from ib_users.interactors.user_profile_interactor import \
        CreateUserProfileDTO
    user_profile = CreateUserProfileDTO(**request_user_profile)

    if user_profile.dob:
        user_profile.dob = user_profile.dob.strftime('%Y-%m-%d')

    storage = UserProfileSQLStorage()
    interactor = UserProfileInteractor(storage=storage, presenter=None)
    accounts_storage = UserAccountsSQLStorage()

    try:
        return interactor.create_user_profile(
            user_id=user.user_id, create_profile_data=user_profile,
            accounts_storage=accounts_storage)
    except (PhoneNumberOrCountryCodeInvalidException,
            InvalidEmailException, InvalidGenderException,
            InvalidLanguageException, InvalidDOBException,
            InvalidUserException,  InvalidPhoneNumberException,
            EmailAlreadyLinkedException) as error:
        from django_swagger_utils.drf_server.exceptions import BadRequest
        raise BadRequest(message=error.error_message,
                         res_status=error.error_type)
