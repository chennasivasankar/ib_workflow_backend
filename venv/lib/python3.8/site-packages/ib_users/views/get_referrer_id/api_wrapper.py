from django_swagger_utils.drf_server.utils.decorator.interface_decorator \
    import validate_decorator

from ib_users.exceptions.referral_exceptions import ReferralDetailsDoesNotExist
from .validator_class import ValidatorClass


@validate_decorator(validator_class=ValidatorClass)
def api_wrapper(*args, **kwargs):
    request_data = kwargs['request_data']
    user_id = request_data['user_id']

    from ib_users.interactors.referrals_interactor import ReferralsInteractor
    from ib_users.storages.referrals_storage_impl import ReferralsSQLStorage
    from ib_users.presenters.referrals_presenter_impl import \
        ReferralsPresenterJSON

    from ib_users.exceptions.referral_exceptions import \
        ReferrerDetailsDoesNotExist
    from django_swagger_utils.drf_server.exceptions import BadRequest

    storage = ReferralsSQLStorage()
    presenter = ReferralsPresenterJSON()
    interactor = ReferralsInteractor(storage=storage, presenter=presenter)

    try:
        referrer_id = interactor.get_referrer_user_id(user_id=user_id)
    except (
    ReferrerDetailsDoesNotExist, ReferralDetailsDoesNotExist) as exception:
        raise BadRequest(message=exception.message,
                         res_status=exception.error_type)
    return {
        "referrer_id": referrer_id
    }
