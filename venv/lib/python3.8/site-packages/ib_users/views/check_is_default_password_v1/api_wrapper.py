from django_swagger_utils.drf_server.exceptions import BadRequest
from django_swagger_utils.drf_server.utils.decorator.interface_decorator \
    import validate_decorator

from ib_users.constants.res_status_constants import ResStatusConstants
from ib_users.interactors.exceptions.user_credentials_exceptions import \
    InvalidUserIdException
from ib_users.interactors.user_credentials\
    .check_default_password_is_changed_interactor import \
    CheckDefaultPasswordIsChangedInteractor
from ib_users.presenters.user_credentials_json_presenter import \
    UserCredentialsJSONPresenter
from ib_users.storages import UserAccountsSQLStorage
from .validator_class import ValidatorClass


@validate_decorator(validator_class=ValidatorClass)
def api_wrapper(*args, **kwargs):
    user = kwargs['user']

    storage = UserAccountsSQLStorage()
    presenter = UserCredentialsJSONPresenter()
    interactor = CheckDefaultPasswordIsChangedInteractor(storage=storage,
                                                         presenter=presenter)

    try:
        return interactor.is_default_password_changed(
            user_id=user.user_id)
    except InvalidUserIdException as exception:
        raise BadRequest(message=exception.message,
                         res_status=ResStatusConstants.INVALID_USER_ID)