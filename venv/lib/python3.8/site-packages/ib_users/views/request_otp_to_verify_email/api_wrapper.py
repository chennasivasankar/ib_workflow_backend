from django_swagger_utils.drf_server.utils.decorator.interface_decorator \
    import validate_decorator
from .validator_class import ValidatorClass
from ib_users.third_party.otp_service_impl import OTPServiceImpl
from ib_users.interactors.verify_otp_through import VerifyThroughOTPInteractor
from ib_users.constants.otp_verification_constants import VerificationType

@validate_decorator(validator_class=ValidatorClass)
def api_wrapper(*args, **kwargs):
    from ib_users.interactors.user_profile_interactor \
        import UserProfileInteractor
    from ib_users.storages.user_profile_sql_storage \
        import UserProfileSQLStorage
    from ib_users.presenters.user_profile_json_presenter \
        import UserProfileJSONPresenter
    from ib_users.interactors.exceptions.user_profile \
        import EmailAlreadyLinkedException, EmailDoesNotExistException, \
        InvalidUserException

    user = kwargs['user']
    user_id = user.user_id

    storage = UserProfileSQLStorage()
    from ib_users.storages import UserAccountsSQLStorage
    accounts_storage = UserAccountsSQLStorage()
    presenter = UserProfileJSONPresenter()

    user_profile_interactor = UserProfileInteractor(storage=storage,
                                                    presenter=presenter)
    verify_otp_interactor = VerifyThroughOTPInteractor(
        VerificationType.VERIFY_EMAIL_WITH_OTP
    )
    otp_service = OTPServiceImpl(verify_otp_interactor)

    try:
        user_profile_interactor.verify_user_email(
            accounts_storage=accounts_storage, user_id=user_id,
            otp_service=otp_service)

    except (EmailDoesNotExistException, EmailAlreadyLinkedException,
            InvalidUserException) as error:
        from django_swagger_utils.drf_server.exceptions import BadRequest
        raise BadRequest(message=error.error_message, res_status=error.error_type)
