from django_swagger_utils.drf_server.exceptions import BadRequest
from django_swagger_utils.drf_server.utils.decorator.interface_decorator \
    import validate_decorator

from ib_users.interactors import LogoutInDevicesImpl
from ib_users.signals import logout_success
from ib_users.storages.oauth2_sql_storage import OAuth2SQLStorage
from ib_users.storages.user_login_device_details_sql_storage import \
    UserLoginDeviceDetailsSQLStorage
from ib_users.third_party.oauth_user_auth_tokens_service import \
    OAuthUserAuthTokensService
from ib_users.validators.base_validator import CustomException
from .validator_class import ValidatorClass


@validate_decorator(validator_class=ValidatorClass)
def api_wrapper(*args, **kwargs):
    user = kwargs['user']

    user_accounts_sql_storage = UserLoginDeviceDetailsSQLStorage()
    login_token_generator = OAuthUserAuthTokensService(
        oauth2_storage=OAuth2SQLStorage()
    )

    logout_interactor = LogoutInDevicesImpl(
        storage=user_accounts_sql_storage,
        login_token_generator=login_token_generator)

    try:
        device_ids = logout_interactor.logout_in_all_devices(user.user_id)
        logout_success.send_robust(
            sender=None, user=user, device_ids=device_ids)

        return
    except CustomException as e:
        raise BadRequest(message=e.error_message, res_status=e.error_type)