from django_swagger_utils.drf_server.utils.decorator.interface_decorator \
    import validate_decorator
from .validator_class import ValidatorClass


@validate_decorator(validator_class=ValidatorClass)
def api_wrapper(*args, **kwargs):
    from ib_users.interactors.user_profile_interactor \
        import UserProfileInteractor
    from ib_users.storages.user_profile_sql_storage \
        import UserProfileSQLStorage
    from ib_users.presenters.user_profile_json_presenter \
        import UserProfileJSONPresenter
    from ib_users.interactors.exceptions.user_profile \
        import CountryCodeAndPhoneNumberDoesNotExistException, \
        CountryCodeDoesNotExistException, PhoneNumberDoesNotExistException, \
        PhoneNumberAlreadyLinkedException, InvalidUserException
    from ib_users.third_party.otp_service_impl import OTPServiceImpl
    from ib_users.interactors.verify_otp_through import VerifyThroughOTPInteractor
    from ib_users.constants.otp_verification_constants import VerificationType
    from ib_users.storages import UserAccountsSQLStorage
    user = kwargs['user']

    storage = UserProfileSQLStorage()
    presenter = UserProfileJSONPresenter()

    accounts_storage = UserAccountsSQLStorage()

    verify_otp_interactor = VerifyThroughOTPInteractor(VerificationType.VERIFY_PHONE_NUMBER_WITH_OTP)

    interactor = UserProfileInteractor(storage=storage, presenter=presenter)

    from django_swagger_utils.drf_server.exceptions import BadRequest

    try:
        interactor.verify_user_phone_number(
            otp_service=OTPServiceImpl(verify_otp_interactor),
            accounts_storage=accounts_storage, user_id=user.user_id)
    except (CountryCodeAndPhoneNumberDoesNotExistException,
            CountryCodeDoesNotExistException, PhoneNumberAlreadyLinkedException,
            PhoneNumberDoesNotExistException, InvalidUserException)as error:
        raise BadRequest(message=error.error_message, res_status=error.error_type)
