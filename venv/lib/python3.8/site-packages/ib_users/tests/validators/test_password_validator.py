import pytest

from ib_users.exceptions.custom_exception_constants import \
    PASSWORD_MIN_LENGTH_IS, PASSWORD_AT_LEAST_1_SPECIAL_CHARACTER
from ib_users.validators.base_validator import \
    CustomException
from ib_users.utils.tests_utils import TestsUtils
from ib_users.validators import PasswordValidator


# custom exception ref: https://www.codementor.io/sheena/how-to-write-python
# -custom-exceptions-du107ufv9 regex ref:
# https://stackoverflow.com/questions/1323364/in-python-how-to-check-if-a
# -string-only-contains-certain-characters
@pytest.mark.parametrize("password,exception_message", [
    ("", PASSWORD_MIN_LENGTH_IS),
    ("a" * 7, PASSWORD_MIN_LENGTH_IS),
    ("abU" * 15, PASSWORD_AT_LEAST_1_SPECIAL_CHARACTER)])
def test_invalid_password(password, exception_message):
    with pytest.raises(
            CustomException) as password_invalid_exception:
        PasswordValidator.validate(password)
    TestsUtils.assert_custom_exception(
        exception_message,
        password_invalid_exception)


@pytest.mark.parametrize("password", ["j@-=>%$^':", "superuser%", "user&##@", "password_latest@"])
def test_valid_passwords(password):
    PasswordValidator.validate(password)
