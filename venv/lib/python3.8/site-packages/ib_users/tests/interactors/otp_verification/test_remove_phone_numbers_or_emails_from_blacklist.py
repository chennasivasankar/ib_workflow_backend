from mock import create_autospec

from ib_users.interactors.storages.otp_blacklist_storage import \
    OTPBlacklistStorage
from ib_users.interactors.blacklist_interactor import BlacklistInteractor
from ib_users.utils.dtos import PhoneNumberDTO


def test_remove_phone_numbers_from_blacklist():
    first_phone_number_dto = PhoneNumberDTO(
        country_code="+91",
        phone_number="966123939"
    )

    second_phone_number_dto = PhoneNumberDTO(
        country_code="+91",
        phone_number="966123949"
    )

    blacklist_storage_mock = create_autospec(OTPBlacklistStorage)
    blacklist_interactor = BlacklistInteractor(storage=blacklist_storage_mock)

    blacklist_interactor.remove_phone_numbers_from_blacklist(
        phone_number_dtos=[first_phone_number_dto, second_phone_number_dto
    ])

    blacklist_storage_mock.remove_phone_numbers_from_blacklist.\
        assert_called_once_with(
        phone_number_dtos=[
            first_phone_number_dto, second_phone_number_dto
        ]
    )


def test_remove_emails_from_blacklist():
    first_email = "sample1@gmail.com"

    second_email = "sample2@gmail.com"

    blacklist_storage_mock = create_autospec(OTPBlacklistStorage)
    blacklist_interactor = BlacklistInteractor(storage=blacklist_storage_mock)

    blacklist_interactor.\
        remove_emails_from_blacklist(
        emails=[first_email, second_email]
    )
    blacklist_storage_mock.remove_emails_from_blacklist.\
        assert_called_once_with(emails=[first_email, second_email]
    )
