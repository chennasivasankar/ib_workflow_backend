import pytest
from mock import create_autospec

from ib_users.interactors.presenters.user_credentials_presenter import \
    UserCredentialsPresenter
from ib_users.interactors.storages import UserAccountsStorage
from ib_users.interactors.user_credentials.check_default_password_is_changed_interactor import \
    CheckDefaultPasswordIsChangedInteractor

class TestCheckDefaultPasswordIsChanged:
    @pytest.fixture
    def set_up(self):
        self.test_user_id = "12345"
        storage = create_autospec(UserAccountsStorage)
        presenter = create_autospec(UserCredentialsPresenter)
        interactor = CheckDefaultPasswordIsChangedInteractor(storage, presenter)
        return interactor, storage, presenter

    @pytest.mark.parametrize('is_changed', ['true', 'false'])
    def test_check_default_password_is_changed(self, set_up, is_changed: bool):
        interactor, storage, presenter = set_up
        storage.is_default_password_changed.return_value = is_changed

        interactor.is_default_password_changed(
            user_id=self.test_user_id)
        storage.is_default_password_changed.assert_called_once_with(
            self.test_user_id)
        presenter.get_is_default_password_changed.assert_called_once_with(
            is_changed)
