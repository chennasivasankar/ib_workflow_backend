import pytest
from mock import create_autospec

from ib_users.constants.otp_verification_constants import VerificationType, \
    OTPStatus
from ib_users.exceptions.otp_not_requested_exception import \
    OTPNotRequestException
from ib_users.interactors.storages.otp_verification_storage import \
    OTPVerificationStorage, GetOTPDetailsDTO
from ib_users.utils.dtos import PhoneNumberDTO


class TestUserOTPInteractor:

    def test_get_otp_details_for_phone_number(self):
        from ib_users.interactors.user_otp_interactor import \
            UserOTPInteractor

        storage = create_autospec(OTPVerificationStorage)
        interactor = UserOTPInteractor(storage=storage)

        phone_number = '9999999999'
        country_code = '91'
        verification_type = VerificationType.LOGIN_WITH_OTP

        otp_details = GetOTPDetailsDTO(otp="123456")
        storage.get_otp_details.return_value = otp_details

        result = interactor.get_otp_details_for_phone_number(
            phone_number=phone_number,
            country_code=country_code,
            verification_type=verification_type
        )
        phone_number_dto = PhoneNumberDTO(
            phone_number=phone_number, country_code=country_code
        )

        storage.get_otp_status.assert_called_once_with(
            phone_number_dto=phone_number_dto,
            verification_type=verification_type
        )

        storage.get_otp_details.assert_called_once_with(
            phone_number_dto=phone_number_dto,
            verification_type=verification_type
        )

        assert result == otp_details

    def test_get_otp_details_for_phone_number_without_any_otp(self):
        from ib_users.interactors.user_otp_interactor import \
            UserOTPInteractor

        storage = create_autospec(OTPVerificationStorage)
        interactor = UserOTPInteractor(storage=storage)

        phone_number = '9999999999'
        country_code = '91'
        verification_type = VerificationType.LOGIN_WITH_OTP

        otp_details = GetOTPDetailsDTO(otp="123456")
        storage.get_otp_details.return_value = otp_details
        storage.get_otp_status.return_value = OTPStatus.NOT_REQUESTED

        with pytest.raises(OTPNotRequestException):
            interactor.get_otp_details_for_phone_number(
                phone_number=phone_number,
                country_code=country_code,
                verification_type=verification_type
            )

        phone_number_dto = PhoneNumberDTO(
            phone_number=phone_number, country_code=country_code
        )

        storage.get_otp_status.assert_called_once_with(
            phone_number_dto=phone_number_dto,
            verification_type=verification_type
        )


