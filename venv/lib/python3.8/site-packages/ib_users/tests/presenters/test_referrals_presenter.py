from ib_users.interactors.storages.referrals_storage import ReferralDetailsDTO, \
    ReferralDTO
from ib_users.presenters.referrals_presenter_impl import ReferralsPresenterJSON


def test_get_referral_codes():
    referral_presenter = ReferralsPresenterJSON()
    test_referral_code = 'DLKJFL'
    test_referral_code2 = 'DKALKK'
    from ib_users.constants.referral_constants import REFERRAL_LIMIT
    referral_details_dtos = [
        ReferralDetailsDTO(referral_limit=REFERRAL_LIMIT,
                           referral_code=test_referral_code),
        ReferralDetailsDTO(referral_limit=REFERRAL_LIMIT,
                           referral_code=test_referral_code2)
    ]

    expected_json = [
        {
            "referral_code": test_referral_code,
            "referral_limit": REFERRAL_LIMIT
        },
        {
            "referral_code": test_referral_code2,
            "referral_limit": REFERRAL_LIMIT
        }
    ]

    referral_details_json = referral_presenter. \
        get_referral_details(referral_code_dtos=referral_details_dtos)

    assert referral_details_json == expected_json


def test_get_user_id_and_referral_limit():
    from ib_users.constants.referral_constants import REFERRAL_LIMIT

    presenter = ReferralsPresenterJSON()

    test_user_id = "test_user_id"
    referral_dto = ReferralDTO(
        user_id='test_user_id',
        referral_limit=REFERRAL_LIMIT
    )

    presenter_response = presenter.get_user_id_and_referral_limit(
        referralDTO=referral_dto)

    expected_json = {
        "user_id": test_user_id,
        "referral_limit": REFERRAL_LIMIT
    }

    assert presenter_response == expected_json
