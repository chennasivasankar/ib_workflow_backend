from django.db import models
from ib_common.models import AbstractDateTimeModel

from ib_users.constants.user_account_constants import SocialAccountProviderType
from ib_users.models import UserAccount


def validate_social_provider(value):
    from django.core.exceptions import ValidationError
    from django.utils.translation import gettext_lazy as _
    providers_list = SocialAccountProviderType.get_list_of_values()

    if value not in providers_list:
        raise ValidationError(
            _('%(value)s is not a valid Social Provider'),
            params={'value': value},
        )


class UserSocialAccount(AbstractDateTimeModel):
    user_account = models.ForeignKey(UserAccount, on_delete=models.CASCADE,
                                     related_name='user_social_accounts')
    provider_type = models.CharField(max_length=20,
                                     validators=[validate_social_provider])

    social_id = models.CharField(max_length=200, null=True, unique=True)

    class Meta:
        unique_together = [
            ["user_account", "provider_type"],
            ["social_id", "provider_type"]
        ]
        app_label = 'ib_users'

