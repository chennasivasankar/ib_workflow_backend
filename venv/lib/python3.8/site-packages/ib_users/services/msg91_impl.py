import json

from django.conf import settings

from ib_users.constants.sms_constants import ServiceProvider
from ib_users.interactors.third_party.sms_sender import SMSSender
from ib_users.utils.dtos import PhoneNumberDTO
from django.conf import settings


class MSG91Impl(SMSSender):
    def __init__(self, message_template: str):
        self.message_template = message_template

    def send_reset_password_link(self, phone_number_dto: PhoneNumberDTO,
                                 link: str):
        self.send_sms(
            country_code=phone_number_dto.country_code,
            phone_number=phone_number_dto.phone_number,
            msg=self.message_template.format(link=link)
        )

    def send_otp(self, country_code, phone_number, otp):
        print("send_otp")
        print(otp)
        print(self.message_template)
        self._send_otp_using_msg91(
            country_code=country_code,
            phone_number=phone_number,
            otp=otp,
            template_id=settings.MSG91_OTP_TEMPLATE_ID
        )

    def send_sms(self, msg, country_code, phone_number):
        if settings.SMS_SERVICE_PROVIDER == ServiceProvider.MSG91.value:
            self._send_sms_using_msg91(
                msg=msg,
                country_code=country_code,
                phone_number=phone_number
            )

    def _send_sms_using_msg91(self, msg, country_code, phone_number):
        import http.client
        conn = http.client.HTTPConnection("api.msg91.com")
        country_code = country_code.replace("+", "")
        print("msg: ", msg)
        payload = {
            "sender": settings.DEFAULT_SMS_SENDER_ID,
            "route": "4",
            "country": country_code,
            "unicode": 1,
            "sms": [
                {
                    "message": self.get_encoded_message(msg),
                    "to": [
                        phone_number
                    ]
                }
            ]
        }
        payload = json.dumps(payload)
        headers = {
            'authkey': settings.MSG91_AUTH_KEY,
            'content-type': "application/json"
        }
        conn.request("POST", "/api/v2/sendsms", payload, headers)
        res = conn.getresponse()
        print(res.read())

    @staticmethod
    def _send_otp_using_msg91(otp, country_code, phone_number,
                              template_id):
        import requests
        country_code = str(country_code).replace("+", "")
        headers = {
            'authkey': settings.MSG91_AUTH_KEY,
            'content-type': "application/json"
        }
        response = requests.get(
            "https://api.msg91.com/api/v5/otp?template_id={template_id}&mobile={country_code}{phone_number}&authkey={authkey}&otp={otp}&invisible=0".format(
                template_id=template_id,
                country_code=country_code,
                phone_number=phone_number,
                otp=otp,
                authkey=settings.MSG91_AUTH_KEY
            ),
            headers
        )
        print(response.content)

    @staticmethod
    def get_encoded_message(message):
        try:
            from urllib.parse import quote
            return quote(message)
        except TypeError:
            return message
