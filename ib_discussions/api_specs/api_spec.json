{
  "swagger": "2.0",
  "host": "127.0.0.1:8000",
  "basePath": "/api/ib_discussions/",
  "info": {
    "version": "1.0.0",
    "title": "Simple API",
    "description": "A simple API to learn how to write OpenAPI Specification"
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth": {
      "tokenUrl": "http://auth.ibtspl.com/oauth2/",
      "flow": "password",
      "scopes": {
        "read": "read users",
        "write": "create users",
        "update": "update users",
        "delete": "delete users"
      },
      "type": "oauth2"
    }
  },
  "security": [],
  "definitions": {
    "HttpResponseAndStatusCode": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "http_status_code": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "response",
        "http_status_code"
      ]
    },
    "EntityDetails": {
      "type": "object",
      "properties": {
        "entity_id": {
          "type": "string"
        },
        "entity_type": {
          "type": "string",
          "enum": [
            "TASK",
            "COLUMN",
            "BOARD"
          ]
        }
      },
      "required": [
        "entity_id",
        "entity_type"
      ]
    },
    "UserDetails": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "type": "string"
        },
        "profile_pic_url": {
          "type": "string"
        }
      },
      "required": [
        "user_id",
        "name",
        "profile_pic_url"
      ]
    },
    "Discussion": {
      "type": "object",
      "properties": {
        "discussion_id": {
          "type": "string",
          "format": "uuid"
        },
        "description": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "author": {
          "$ref": "#/definitions/UserDetails"
        },
        "is_clarified": {
          "type": "boolean"
        },
        "is_editable": {
          "type": "boolean"
        },
        "total_comments_count": {
          "type": "integer",
          "format": "int64"
        }
      },
      "required": [
        "discussion_id",
        "description",
        "title",
        "created_at",
        "author",
        "is_clarified",
        "is_editable",
        "total_comments_count"
      ]
    },
    "Comment": {
      "type": "object",
      "properties": {
        "author": {
          "$ref": "#/definitions/UserDetails"
        },
        "comment_id": {
          "type": "string",
          "format": "uuid"
        },
        "comment_content": {
          "type": "string"
        },
        "total_replies_count": {
          "type": "integer",
          "format": "int64"
        },
        "is_editable": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "mention_users": {
          "$ref": "#/definitions/MentionUsers"
        },
        "multi_media": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Multimedia"
          }
        }
      },
      "required": [
        "total_replies_count",
        "author",
        "created_at",
        "is_editable",
        "comment_id",
        "comment_content",
        "mention_users",
        "multi_media"
      ]
    },
    "Multimedia": {
      "type": "object",
      "properties": {
        "format_type": {
          "type": "string",
          "enum": [
            "IMAGE",
            "VIDEO"
          ]
        },
        "url": {
          "type": "string"
        }
      },
      "required": [
        "format",
        "url"
      ]
    },
    "Reply": {
      "type": "object",
      "properties": {
        "comment_id": {
          "type": "string",
          "format": "uuid"
        },
        "author": {
          "$ref": "#/definitions/UserDetails"
        },
        "comment_content": {
          "type": "string"
        },
        "is_editable": {
          "type": "boolean"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "author",
        "created_at",
        "is_editable",
        "comment_id",
        "comment_content"
      ]
    },
    "MentionUsers": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "profile_pic_url": {
            "type": "string"
          }
        },
        "required": [
          "user_id",
          "name",
          "profile_pic_url"
        ]
      }
    }
  },
  "parameters": {
    "CreateDiscussionParameter": {
      "name": "CreateDiscussionParameter",
      "description": "Create Discussion for user",
      "in": "body",
      "required": true,
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/EntityDetails"
          },
          {
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            },
            "required": [
              "title",
              "description"
            ]
          }
        ]
      }
    },
    "GetDiscussionsParameter": {
      "name": "GetDiscussionsParameter",
      "description": "get discussions parameter",
      "in": "body",
      "required": true,
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/EntityDetails"
          },
          {
            "type": "object",
            "properties": {
              "filter_by": {
                "type": "string",
                "enum": [
                  "ALL",
                  "POSTED_BY_ME",
                  "CLARIFIED",
                  "NOT_CLARIFIED"
                ]
              },
              "sort_by": {
                "type": "string",
                "enum": [
                  "LATEST"
                ]
              }
            },
            "required": [
              "filter_by",
              "sort_by"
            ]
          }
        ]
      }
    },
    "DiscussionIdPathParameter": {
      "in": "path",
      "name": "discussion_id",
      "required": true,
      "description": "Discussion Id",
      "type": "string",
      "format": "uuid"
    },
    "UpdateDiscussionParameter": {
      "name": "UpdateDiscussionParameter",
      "description": "update discussion parameter",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "required": [
          "title"
        ]
      }
    },
    "AddCommentParameter": {
      "in": "body",
      "name": "AddCommentParameter",
      "schema": {
        "type": "object",
        "properties": {
          "comment_content": {
            "type": "string"
          },
          "mention_user_ids": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "multi_media": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Multimedia"
            }
          }
        },
        "required": [
          "comment_content",
          "mention_user_ids",
          "multi_media"
        ]
      }
    },
    "OffsetQueryParameter": {
      "in": "query",
      "name": "offset",
      "description": "off set parameter",
      "type": "integer",
      "format": "int64",
      "required": true
    },
    "LimitQueryParameter": {
      "in": "query",
      "name": "limit",
      "description": "limit Parameter",
      "type": "integer",
      "format": "int64",
      "required": true
    },
    "CommentIdPathParameter": {
      "in": "path",
      "name": "comment_id",
      "type": "string",
      "format": "uuid",
      "description": "Comment Id",
      "required": true
    },
    "ReplyToCommentParameter": {
      "in": "body",
      "description": "Reply to a Comment",
      "name": "ReplyToCommentParameter",
      "schema": {
        "type": "object",
        "properties": {
          "comment_content": {
            "type": "string"
          }
        },
        "required": [
          "comment_content"
        ]
      }
    }
  },
  "responses": {
    "EntityDetailsNotFoundResponse": {
      "description": "create discussion not found response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "ENTITY_ID_NOT_FOUND"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "CreateDiscussionBadRequestResponse": {
      "description": "create discussion bad request response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "EMPTY_TITLE",
                  "INVALID_ENTITY_TYPE_FOR_ENTITY_ID"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "GetDiscussionSuccessResponse": {
      "description": "get discussion success response",
      "schema": {
        "type": "object",
        "properties": {
          "discussions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Discussion"
            }
          },
          "total_count": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "discussions",
          "total_count"
        ]
      }
    },
    "GetDiscussionBadRequestResponse": {
      "description": "get discussion bad request response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "INVALID_ENTITY_TYPE_FOR_ENTITY_ID",
                  "INVALID_OFFSET",
                  "INVALID_LIMIT",
                  "INVALID_USER_ID"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "MarkClarifiedDiscussionNotFoundResponse": {
      "description": "mark clarified discussion not found response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "DISCUSSION_ID_NOT_FOUND"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "MarkClarifiedDiscussionBadRequestResponse": {
      "description": "mark clarified discussion bad request response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "INVALID_DISCUSSION_ID",
                  "USER_CANNOT_MARK_AS_CLARIFIED"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "UpdateDiscussionNotFoundResponse": {
      "description": "update discussion not found response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "DISCUSSION_ID_NOT_FOUND"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "UpdateDiscussionBadRequestResponse": {
      "description": "update discussion bad request response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "USER_CANNOT_UPDATE_DISCUSSION",
                  "EMPTY_TITLE"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "DeleteDiscussionBadRequestResponse": {
      "description": "delete discussion bad request response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "USER_CANNOT_DELETE_DISCUSSION"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "DeleteDiscussionNotFoundResponse": {
      "description": "delete discussion not found response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "DISCUSSION_ID_NOT_FOUND"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "AddCommentResponse": {
      "description": "get comment details",
      "schema": {
        "$ref": "#/definitions/Comment"
      }
    },
    "CommentNotFoundResponse": {
      "description": "comment not found response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "DISCUSSION_ID_NOT_FOUND"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "CommentBadRequestResponse": {
      "description": "comment bad request response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "INVALID_OFFSET",
                  "INVALID_LIMIT"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "GetCommentsResponse": {
      "description": "List of comments with replies count and reactions for a discussions",
      "schema": {
        "type": "object",
        "properties": {
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Comment"
            }
          }
        }
      }
    },
    "ReplyToCommentResponse": {
      "description": "get reply details",
      "schema": {
        "$ref": "#/definitions/Reply"
      }
    },
    "ReplyToCommentNotFoundResponse": {
      "description": "reply to comment not found response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "COMMENT_ID_NOT_FOUND"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "GetRepliesResponse": {
      "description": "Get List of replies with reaction details for a comment",
      "schema": {
        "type": "object",
        "properties": {
          "replies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Reply"
            }
          }
        }
      }
    },
    "GetRepliesNotFoundResponse": {
      "description": "get replies not found response",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/HttpResponseAndStatusCode"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "COMMENT_ID_NOT_FOUND"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    }
  },
  "paths": {
    "/discussion/v1/": {
      "post": {
        "operationId": "create_discussion",
        "summary": "create the discussion ",
        "description": "create the discussion with title and description",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/CreateDiscussionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Success response for create discussion"
          },
          "404": {
            "$ref": "#/responses/EntityDetailsNotFoundResponse"
          },
          "400": {
            "$ref": "#/responses/CreateDiscussionBadRequestResponse"
          }
        }
      }
    },
    "/get_discussions/v1/": {
      "post": {
        "operationId": "get_discussions",
        "summary": "get discussions",
        "description": "get all discussion for given entity id and entity type",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/GetDiscussionsParameter"
          },
          {
            "$ref": "#/parameters/OffsetQueryParameter"
          },
          {
            "$ref": "#/parameters/LimitQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetDiscussionSuccessResponse"
          },
          "404": {
            "$ref": "#/responses/EntityDetailsNotFoundResponse"
          },
          "400": {
            "$ref": "#/responses/GetDiscussionBadRequestResponse"
          }
        }
      }
    },
    "/discussion/{discussion_id}/mark_as_clarified/v1/": {
      "post": {
        "operationId": "clarify_discussion",
        "summary": "Mark discussion is clarified",
        "description": "Mark discussion is clarified for creator of discussion",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DiscussionIdPathParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully updated"
          },
          "404": {
            "$ref": "#/responses/MarkClarifiedDiscussionNotFoundResponse"
          },
          "400": {
            "$ref": "#/responses/MarkClarifiedDiscussionBadRequestResponse"
          }
        }
      }
    },
    "/discussion/{discussion_id}/update/v1/": {
      "post": {
        "operationId": "update_discussion",
        "summary": "Update Discussion",
        "description": "update Discussion of discussion id",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DiscussionIdPathParameter"
          },
          {
            "$ref": "#/parameters/UpdateDiscussionParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully Edit the Discussion"
          },
          "400": {
            "$ref": "#/responses/UpdateDiscussionBadRequestResponse"
          },
          "404": {
            "$ref": "#/responses/UpdateDiscussionNotFoundResponse"
          }
        }
      }
    },
    "/discussion/{discussion_id}/v1/": {
      "delete": {
        "summary": "delete discussion of discussion id",
        "operationId": "delete_discussion",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DiscussionIdPathParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully deleted the discussion"
          },
          "400": {
            "$ref": "#/responses/DeleteDiscussionBadRequestResponse"
          },
          "404": {
            "$ref": "#/responses/DeleteDiscussionNotFoundResponse"
          }
        }
      }
    },
    "/discussion/{discussion_id}/comment/v1/": {
      "post": {
        "summary": "add comment to a discussion",
        "operationId": "add_comment",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DiscussionIdPathParameter"
          },
          {
            "$ref": "#/parameters/AddCommentParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/AddCommentResponse"
          },
          "404": {
            "$ref": "#/responses/CommentNotFoundResponse"
          }
        }
      },
      "get": {
        "summary": "Comments for a discussion",
        "operationId": "get_comments_for_discussion",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/DiscussionIdPathParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetCommentsResponse"
          },
          "404": {
            "$ref": "#/responses/CommentNotFoundResponse"
          },
          "400": {
            "$ref": "#/responses/CommentBadRequestResponse"
          }
        }
      }
    },
    "/comment/{comment_id}/reply/v1/": {
      "post": {
        "summary": "Reply to comment",
        "operationId": "reply_to_comment",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/CommentIdPathParameter"
          },
          {
            "$ref": "#/parameters/ReplyToCommentParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ReplyToCommentResponse"
          },
          "404": {
            "$ref": "#/responses/ReplyToCommentNotFoundResponse"
          }
        }
      },
      "get": {
        "summary": "Replies for comment",
        "operationId": "get_replies_for_comment",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/CommentIdPathParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/GetRepliesResponse"
          },
          "404": {
            "$ref": "#/responses/GetRepliesNotFoundResponse"
          }
        }
      }
    }
  }
}
