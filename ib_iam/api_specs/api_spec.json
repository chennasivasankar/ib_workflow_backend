{
  "swagger": "2.0",
  "host": "127.0.0.1:8000",
  "basePath": "/api/ib_iam/",
  "info": {
    "version": "1.0.0",
    "title": "Identity Access Management",
    "description": "Identity Access Management"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth": {
      "tokenUrl": "http://auth.ibtspl.com/oauth2/",
      "flow": "password",
      "scopes": {
        "read": "read users",
        "write": "create users",
        "update": "update users",
        "delete": "delete users"
      },
      "type": "oauth2"
    }
  },
  "security": [],
  "definitions": {
    "MemberDetails": {
      "type": "object",
      "properties": {
        "member_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "profile_pic_url": {
          "type": "string"
        }
      },
      "required": [
        "member_id",
        "name",
        "profile_pic_url"
      ]
    },
    "TeamNameAndDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "TeamWithMembersDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/TeamNameAndDescription"
        },
        {
          "type": "object",
          "properties": {
            "team_id": {
              "type": "string"
            },
            "no_of_members": {
              "type": "integer"
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MemberDetails"
              }
            }
          },
          "required": [
            "team_id",
            "no_of_members",
            "members"
          ]
        }
      ]
    },
    "CompanyWithNoOfEmployeeDetails": {
      "type": "object",
      "properties": {
        "company_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "no_of_employees": {
          "type": "integer"
        }
      }
    },
    "ResponseForGetListOfTeams": {
      "type": "object",
      "properties": {
        "total_teams_count": {
          "type": "integer"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamWithMembersDetails"
          }
        }
      },
      "required": [
        "total_teams_count",
        "teams"
      ]
    },
    "TeamWithUserIds": {
      "allOf": [
        {
          "$ref": "#/definitions/TeamNameAndDescription"
        },
        {
          "type": "object",
          "properties": {
            "user_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "ResponseForGetListOfCompanies": {
      "type": "object",
      "properties": {
        "total_companies": {
          "type": "integer"
        },
        "list_of_companies": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompanyWithNoOfEmployeeDetails"
          }
        }
      }
    },
    "CommonHttpExceptionFields": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "http_status_code": {
          "type": "integer"
        }
      },
      "required": [
        "response",
        "http_status_code"
      ]
    },
    "BadRequestResponseForGetListOfTeams": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "INVALID_LIMIT",
                "INVALID_OFFSET"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "UnauthorizedResponseForGetListOfTeams": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "USER_HAS_NO_ACCESS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "UnauthorizedResponseForAddTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "USER_HAS_NO_ACCESS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "NotFoundResponseForAddTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "INVALID_USERS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "BadRequestResponseForAddTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "TEAM_NAME_ALREADY_EXISTS",
                "DUPLICATE_USERS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "TeamId": {
      "type": "object",
      "properties": {
        "team_id": {
          "type": "string",
          "format": "uuid"
        }
      },
      "required": [
        "team_id"
      ]
    },
    "BadRequestResponseForUpdateTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "TEAM_NAME_ALREADY_EXISTS",
                "DUPLICATE_USERS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "UnauthorizedResponseForUpdateTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "USER_HAS_NO_ACCESS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "NotFoundResponseForUpdateTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "INVALID_TEAM",
                "INVALID_USERS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "NotFoundResponseForDeleteTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "INVALID_TEAM"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "UnauthorizedResponseForDeleteTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "USER_HAS_NO_ACCESS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    }
  },
  "parameters": {
    "LimitQueryParameter": {
      "name": "limit_query_parameter",
      "in": "query",
      "required": true,
      "type": "integer",
      "default": 5
    },
    "OffsetQueryParameter": {
      "name": "offset_query_parameter",
      "in": "query",
      "required": true,
      "type": "integer",
      "default": 0
    },
    "AddTeamParameters": {
      "name": "details_to_add_team",
      "in": "body",
      "required": true,
      "description": "parameters or details to create/add a team",
      "schema": {
        "$ref": "#/definitions/TeamWithUserIds"
      }
    },
    "TeamId": {
      "name": "team_id",
      "in": "path",
      "required": true,
      "description": "team_id to identify a team",
      "type": "string",
      "format": "uuid"
    },
    "UpdateTeamParameter": {
      "name": "team_details_to_be_updated",
      "in": "body",
      "description": "details that are to be updated of a team",
      "schema": {
        "$ref": "#/definitions/TeamWithUserIds"
      }
    }
  },
  "responses": {
    "BadRequestResponseForGetListOfTeams": {
      "description": "given limit or offset is not valid",
      "schema": {
        "$ref": "#/definitions/BadRequestResponseForGetListOfTeams"
      }
    },
    "UnauthorizedResponseForGetListOfTeams": {
      "description": "user has no access to see teams",
      "schema": {
        "$ref": "#/definitions/UnauthorizedResponseForGetListOfTeams"
      }
    },
    "SuccessResponseForGetListOfTeams": {
      "description": "returns list of teams",
      "schema": {
        "$ref": "#/definitions/ResponseForGetListOfTeams"
      }
    },
    "UnauthorizedResponseForAddTeam": {
      "description": "User has no access to add a team",
      "schema": {
        "$ref": "#/definitions/UnauthorizedResponseForAddTeam"
      }
    },
    "NotFoundResponseForAddTeam": {
      "description": "Requested users not found to add",
      "schema": {
        "$ref": "#/definitions/NotFoundResponseForAddTeam"
      }
    },
    "BadRequestResponseForAddTeam": {
      "description": "Team name already exists or duplicate users has sent",
      "schema": {
        "$ref": "#/definitions/BadRequestResponseForAddTeam"
      }
    },
    "SuccessfullyCreatedResponseForAddTeam": {
      "description": "Team Created successfully",
      "schema": {
        "$ref": "#/definitions/TeamId"
      }
    },
    "BadRequestResponseForUpdateTeam": {
      "description": "Team name already exists or duplicate users has sent",
      "schema": {
        "$ref": "#/definitions/BadRequestResponseForUpdateTeam"
      }
    },
    "UnauthorizedResponseForUpdateTeam": {
      "description": "User has no access to update team",
      "schema": {
        "$ref": "#/definitions/UnauthorizedResponseForUpdateTeam"
      }
    },
    "NotFoundResponseForUpdateTeam": {
      "description": "Invalid team or Invalid Users sent",
      "schema": {
        "$ref": "#/definitions/NotFoundResponseForUpdateTeam"
      }
    },
    "NotFoundResponseForDeleteTeam": {
      "description": "Requested team does not exist",
      "schema": {
        "$ref": "#/definitions/NotFoundResponseForDeleteTeam"
      }
    },
    "UnauthorizedResponseForDeleteTeam": {
      "description": "User has no access to delete a team",
      "schema": {
        "$ref": "#/definitions/UnauthorizedResponseForDeleteTeam"
      }
    }
  },
  "paths": {
    "/teams/v1/": {
      "get": {
        "summary": "get list of teams",
        "description": "Returns a list containing all teams, if accessed by admin",
        "operationId": "get_list_of_teams",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LimitQueryParameter"
          },
          {
            "$ref": "#/parameters/OffsetQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/SuccessResponseForGetListOfTeams"
          },
          "400": {
            "$ref": "#/responses/BadRequestResponseForGetListOfTeams"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedResponseForGetListOfTeams"
          }
        }
      }
    },
    "/team/add/v1/": {
      "post": {
        "summary": "Adds a new team",
        "description": "Creates a new team",
        "operationId": "add_team",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AddTeamParameters"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/SuccessfullyCreatedResponseForAddTeam"
          },
          "400": {
            "$ref": "#/responses/BadRequestResponseForAddTeam"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedResponseForAddTeam"
          },
          "404": {
            "$ref": "#/responses/NotFoundResponseForAddTeam"
          }
        }
      }
    },
    "/team/{team_id}/v1/": {
      "put": {
        "summary": "update team name",
        "description": "updates a team name",
        "operationId": "update_team_details",
        "security": [
          {
            "oauth": [
              "update"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TeamId"
          },
          {
            "$ref": "#/parameters/UpdateTeamParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Team details updated Successfully"
          },
          "400": {
              "$ref": "#/responses/BadRequestResponseForUpdateTeam"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedResponseForUpdateTeam"
          },
          "404": {
            "$ref": "#/responses/NotFoundResponseForUpdateTeam"
          }
        }
      },
      "delete": {
        "summary": "delete team",
        "description": "deletes a team",
        "operationId": "delete_team",
        "security": [
          {
            "oauth": [
              "delete"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TeamId"
          }
        ],
        "responses": {
          "200": {
            "description": "Team deleted Successfully"
          },
          "404": {
            "$ref": "#/responses/NotFoundResponseForDeleteTeam"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedResponseForDeleteTeam"
          }
        }
      }
    },
    "/companies/": {
      "get": {
        "summary": "get list of companies",
        "description": "Returns a list containing all companies, if accessed by admin",
        "operationId": "get_list_of_companies",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LimitQueryParameter"
          },
          {
            "$ref": "#/parameters/OffsetQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "list of companies",
            "schema": {
              "$ref": "#/definitions/ResponseForGetListOfCompanies"
            }
          },
          "400": {
            "description": "BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    }
  }
}
