{
  "swagger": "2.0",
  "host": "127.0.0.1:8000",
  "basePath": "/api/ib_iam/",
  "info": {
    "version": "1.0.0",
    "title": "Identity Access Management",
    "description": "Identity Access Management"
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth": {
      "tokenUrl": "http://auth.ibtspl.com/oauth2/",
      "flow": "password",
      "scopes": {
        "read": "read users",
        "write": "create users",
        "update": "update users",
        "delete": "delete users"
      },
      "type": "oauth2"
    }
  },
  "security": [],
  "definitions": {
    "MemberDetails": {
      "type": "object",
      "properties": {
        "member_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "profile_pic_url": {
          "type": "string"
        }
      },
      "required": [
        "member_id",
        "name",
        "profile_pic_url"
      ]
    },
    "EmployeeDetails": {
      "type": "object",
      "properties": {
        "employee_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "profile_pic_url": {
          "type": "string"
        }
      },
      "required": [
        "employee_id",
        "name",
        "profile_pic_url"
      ]
    },
    "TeamNameAndDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "TeamWithMembersDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/TeamNameAndDescription"
        },
        {
          "type": "object",
          "properties": {
            "team_id": {
              "type": "string"
            },
            "no_of_members": {
              "type": "integer"
            },
            "members": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/MemberDetails"
              }
            }
          },
          "required": [
            "team_id",
            "no_of_members",
            "members"
          ]
        }
      ]
    },
    "CompanyNameLogoAndDescription": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "logo_url": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "CompanyDetailsWithEmployeeDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/CompanyNameLogoAndDescription"
        },
        {
          "type": "object",
          "properties": {
            "company_id": {
              "type": "string"
            },
            "employees": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/EmployeeDetails"
              }
            }
          },
          "required": [
            "company_id",
            "employees"
          ]
        }
      ]
    },
    "TeamsWithTotalTeamsCount": {
      "type": "object",
      "properties": {
        "total_teams_count": {
          "type": "integer"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamWithMembersDetails"
          }
        }
      },
      "required": [
        "total_teams_count",
        "teams"
      ]
    },
    "TeamWithUserIds": {
      "allOf": [
        {
          "$ref": "#/definitions/TeamNameAndDescription"
        },
        {
          "type": "object",
          "properties": {
            "user_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "user_ids"
          ]
        }
      ]
    },
    "CommonHttpExceptionFields": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "http_status_code": {
          "type": "integer"
        }
      },
      "required": [
        "response",
        "http_status_code"
      ]
    },
    "BadRequestResponseForGetListOfTeams": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "INVALID_LIMIT",
                "INVALID_OFFSET"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "UnauthorizedResponseForGetListOfTeams": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "USER_HAS_NO_ACCESS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "UnauthorizedResponseForAddTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "USER_HAS_NO_ACCESS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "NotFoundResponseForAddTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "INVALID_USERS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "BadRequestResponseForAddTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "TEAM_NAME_ALREADY_EXISTS",
                "DUPLICATE_USERS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "TeamId": {
      "type": "object",
      "properties": {
        "team_id": {
          "type": "string",
          "format": "uuid"
        }
      },
      "required": [
        "team_id"
      ]
    },
    "BadRequestResponseForUpdateTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "TEAM_NAME_ALREADY_EXISTS",
                "DUPLICATE_USERS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "UnauthorizedResponseForUpdateTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "USER_HAS_NO_ACCESS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "UnauthorizedResponseForDeleteTeam": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "USER_HAS_NO_ACCESS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "UserHasNoAccessException": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "USER_HAS_NO_ACCESS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "CompanyWithEmployeeIds": {
      "allOf": [
        {
          "$ref": "#/definitions/CompanyNameLogoAndDescription"
        },
        {
          "type": "object",
          "properties": {
            "employee_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      ]
    },
    "CompanyNameAlreadyExistsOrDuplicateUsersException": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "COMPANY_NAME_ALREADY_EXISTS",
                "DUPLICATE_USERS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    },
    "CompanyId": {
      "type": "object",
      "properties": {
        "company_id": {
          "type": "string",
          "format": "uuid"
        }
      },
      "required": [
        "company_id"
      ]
    },
    "UnauthorizedForDeleteCompanyResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/CommonHttpExceptionFields"
        },
        {
          "type": "object",
          "properties": {
            "res_status": {
              "type": "string",
              "enum": [
                "USER_HAS_NO_ACCESS"
              ]
            }
          },
          "required": [
            "res_status"
          ]
        }
      ]
    }
  },
  "parameters": {
    "LimitQueryParameter": {
      "name": "limit",
      "in": "query",
      "required": true,
      "type": "integer",
      "default": 5
    },
    "OffsetQueryParameter": {
      "name": "offset",
      "in": "query",
      "required": true,
      "type": "integer",
      "default": 0
    },
    "AddTeamParameter": {
      "name": "details_to_add_team",
      "in": "body",
      "required": true,
      "description": "parameters or details to create/add a team",
      "schema": {
        "$ref": "#/definitions/TeamWithUserIds"
      }
    },
    "TeamIdPathParameter": {
      "name": "team_id",
      "in": "path",
      "required": true,
      "description": "team_id to identify a team",
      "type": "string",
      "format": "uuid"
    },
    "UpdateTeamParameter": {
      "name": "team_details_to_be_updated",
      "in": "body",
      "description": "details that are to be updated of a team",
      "schema": {
        "$ref": "#/definitions/TeamWithUserIds"
      }
    },
    "AddCompanyParameter": {
      "name": "details_to_add_company",
      "in": "body",
      "required": true,
      "description": "parameters or details to create/add a company",
      "schema": {
        "$ref": "#/definitions/CompanyWithEmployeeIds"
      }
    },
    "CompanyIdPathParameter": {
      "name": "company_id",
      "in": "path",
      "required": true,
      "description": "company_id to identify a company",
      "type": "string",
      "format": "uuid"
    },
    "UpdateCompanyParameter": {
      "name": "company_details_to_update",
      "in": "body",
      "description": "details that are to be updated of a company",
      "schema": {
        "$ref": "#/definitions/CompanyWithEmployeeIds"
      }
    }
  },
  "responses": {
    "BadRequestResponseForGetListOfTeams": {
      "description": "given limit or offset is not valid",
      "schema": {
        "$ref": "#/definitions/BadRequestResponseForGetListOfTeams"
      }
    },
    "UnauthorizedResponseForGetListOfTeams": {
      "description": "user has no access to see teams",
      "schema": {
        "$ref": "#/definitions/UnauthorizedResponseForGetListOfTeams"
      }
    },
    "SuccessResponseForGetListOfTeams": {
      "description": "returns list of teams",
      "schema": {
        "$ref": "#/definitions/TeamsWithTotalTeamsCount"
      }
    },
    "UnauthorizedResponseForAddTeam": {
      "description": "User has no access to add a team",
      "schema": {
        "$ref": "#/definitions/UnauthorizedResponseForAddTeam"
      }
    },
    "NotFoundResponseForAddTeam": {
      "description": "Requested users not found to add",
      "schema": {
        "$ref": "#/definitions/NotFoundResponseForAddTeam"
      }
    },
    "BadRequestResponseForAddTeam": {
      "description": "Team name already exists or duplicate users has sent",
      "schema": {
        "$ref": "#/definitions/BadRequestResponseForAddTeam"
      }
    },
    "SuccessfullyCreatedResponseForAddTeam": {
      "description": "Team Created successfully",
      "schema": {
        "$ref": "#/definitions/TeamId"
      }
    },
    "BadRequestResponseForUpdateTeam": {
      "description": "Team name already exists or duplicate users has sent",
      "schema": {
        "$ref": "#/definitions/BadRequestResponseForUpdateTeam"
      }
    },
    "UnauthorizedResponseForUpdateTeam": {
      "description": "User has no access to update team",
      "schema": {
        "$ref": "#/definitions/UserHasNoAccessException"
      }
    },
    "NotFoundForUpdateTeamResponse": {
      "description": "Invalid team or Invalid Users sent",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/CommonHttpExceptionFields"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "INVALID_TEAM",
                  "INVALID_USERS"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "NotFoundResponseForDeleteTeam": {
      "description": "Requested team does not exist",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/CommonHttpExceptionFields"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "INVALID_TEAM"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "UnauthorizedResponseForDeleteTeam": {
      "description": "User has no access to delete a team",
      "schema": {
        "$ref": "#/definitions/UserHasNoAccessException"
      }
    },
    "SuccessForGetCompaniesResponse": {
      "description": "returns all companies with their employee details",
      "schema": {
        "type": "object",
        "properties": {
          "companies": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/CompanyDetailsWithEmployeeDetails"
            }
          }
        }
      }
    },
    "UnauthorizedForGetCompaniesResponse": {
      "description": "user has no access to see companies",
      "schema": {
        "$ref": "#/definitions/UserHasNoAccessException"
      }
    },
    "UnauthorizedForAddCompanyResponse": {
      "description": "User has no access to add a company",
      "schema": {
        "$ref": "#/definitions/UserHasNoAccessException"
      }
    },
    "NotFoundForAddCompanyResponse": {
      "description": "Requested users not found to add",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/CommonHttpExceptionFields"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "INVALID_USERS"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "BadRequestForAddCompanyResponse": {
      "description": "Company name already exists or duplicate users has sent",
      "schema": {
        "$ref": "#/definitions/CompanyNameAlreadyExistsOrDuplicateUsersException"
      }
    },
    "SuccessfullyCreatedForAddCompanyResponse": {
      "description": "Company Created successfully",
      "schema": {
        "$ref": "#/definitions/CompanyId"
      }
    },
    "NotFoundForDeleteCompanyResponse": {
      "description": "Requested company does not exist",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/CommonHttpExceptionFields"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "INVALID_COMPANY"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "UnauthorizedForDeleteCompanyResponse": {
      "description": "User has no access to delete a company",
      "schema": {
        "$ref": "#/definitions/UserHasNoAccessException"
      }
    },
    "BadRequestForUpdateCompanyResponse": {
      "description": "Company name already exists or duplicate users has sent",
      "schema": {
        "$ref": "#/definitions/CompanyNameAlreadyExistsOrDuplicateUsersException"
      }
    },
    "UnauthorizedForUpdateCompanyResponse": {
      "description": "User has no access to update company",
      "schema": {
        "$ref": "#/definitions/UserHasNoAccessException"
      }
    },
    "NotFoundForUpdateCompanyResponse": {
      "description": "Invalid company or Invalid Users sent",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/CommonHttpExceptionFields"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "INVALID_COMPANY",
                  "INVALID_USERS"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    }
  },
  "paths": {
    "/teams/v1/": {
      "get": {
        "summary": "get list of teams",
        "description": "Returns a list containing all teams related to a user(admin).",
        "operationId": "get_list_of_teams",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/LimitQueryParameter"
          },
          {
            "$ref": "#/parameters/OffsetQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/SuccessResponseForGetListOfTeams"
          },
          "400": {
            "$ref": "#/responses/BadRequestResponseForGetListOfTeams"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedResponseForGetListOfTeams"
          }
        }
      }
    },
    "/team/add/v1/": {
      "post": {
        "summary": "Adds a new team",
        "description": "Creates a new team",
        "operationId": "add_team",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AddTeamParameter"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/SuccessfullyCreatedResponseForAddTeam"
          },
          "400": {
            "$ref": "#/responses/BadRequestResponseForAddTeam"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedResponseForAddTeam"
          },
          "404": {
            "$ref": "#/responses/NotFoundResponseForAddTeam"
          }
        }
      }
    },
    "/team/{team_id}/v1/": {
      "put": {
        "summary": "update team name",
        "description": "updates a team name",
        "operationId": "update_team_details",
        "security": [
          {
            "oauth": [
              "update"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TeamIdPathParameter"
          },
          {
            "$ref": "#/parameters/UpdateTeamParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Team details updated Successfully"
          },
          "400": {
            "$ref": "#/responses/BadRequestResponseForUpdateTeam"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedResponseForUpdateTeam"
          },
          "404": {
            "$ref": "#/responses/NotFoundForUpdateTeamResponse"
          }
        }
      },
      "delete": {
        "summary": "delete team",
        "description": "deletes a team",
        "operationId": "delete_team",
        "security": [
          {
            "oauth": [
              "delete"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/TeamIdPathParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Team deleted Successfully"
          },
          "404": {
            "$ref": "#/responses/NotFoundResponseForDeleteTeam"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedResponseForDeleteTeam"
          }
        }
      }
    },
    "/companies/v1/": {
      "get": {
        "summary": "get companies",
        "description": "Returns all companies and related employee count, if accessed by admin",
        "operationId": "get_companies",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/SuccessForGetCompaniesResponse"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedForGetCompaniesResponse"
          }
        }
      }
    },
    "/company/add/v1/": {
      "post": {
        "summary": "Adds a new company",
        "description": "Creates/Adds a new company",
        "operationId": "add_company",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AddCompanyParameter"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/responses/SuccessfullyCreatedForAddCompanyResponse"
          },
          "400": {
            "$ref": "#/responses/BadRequestForAddCompanyResponse"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedForAddCompanyResponse"
          },
          "404": {
            "$ref": "#/responses/NotFoundForAddCompanyResponse"
          }
        }
      }
    },
    "/company/{company_id}/v1/": {
      "put": {
        "summary": "update company details",
        "description": "updates company details",
        "operationId": "update_company_details",
        "security": [
          {
            "oauth": [
              "update"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/CompanyIdPathParameter"
          },
          {
            "$ref": "#/parameters/UpdateCompanyParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Company details updated Successfully"
          },
          "400": {
            "$ref": "#/responses/BadRequestForUpdateCompanyResponse"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedForUpdateCompanyResponse"
          },
          "404": {
            "$ref": "#/responses/NotFoundForUpdateCompanyResponse"
          }
        }
      },
      "delete": {
        "summary": "delete company",
        "description": "deletes a company",
        "operationId": "delete_company",
        "security": [
          {
            "oauth": [
              "delete"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/CompanyIdPathParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Company deleted Successfully"
          },
          "404": {
            "$ref": "#/responses/NotFoundForDeleteCompanyResponse"
          },
          "401": {
            "$ref": "#/responses/UnauthorizedForDeleteCompanyResponse"
          }
        }
      }
    }
  }
}
