{
  "swagger": "2.0",
  "host": "127.0.0.1:8000",
  "basePath": "/api/ib_iam/",
  "info": {
    "version": "1.0.0",
    "title": "Simple API",
    "description": "A simple API to learn how to write OpenAPI Specification"
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "oauth": {
      "tokenUrl": "http://auth.ibtspl.com/oauth2/",
      "flow": "password",
      "scopes": {
        "read": "read users",
        "write": "create users",
        "update": "update users",
        "delete": "delete users"
      },
      "type": "oauth2"
    }
  },
  "security": [],
  "definitions": {
    "CommonHttpExceptionFields": {
      "type": "object",
      "properties": {
        "response": {
          "type": "string"
        },
        "http_status_code": {
          "type": "integer"
        }
      },
      "required": [
        "response",
        "http_status_code"
      ]
    },
    "UserNameAndEmail": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "email"
      ]
    },
    "UserDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/UserId"
        },
        {
          "$ref": "#/definitions/UserNameAndEmail"
        }
      ]
    },
    "UserWithExtraFields": {
      "allOf": [
        {
          "$ref": "#/definitions/UserDetails"
        },
        {
          "type": "object",
          "properties": {
            "profile_pic_url": {
              "type": "string"
            },
            "is_admin": {
              "type": "boolean"
            }
          },
          "required": [
            "profile_pic_url",
            "is_admin"
          ]
        }
      ]
    },
    "UserId": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        }
      },
      "required": [
        "user_id"
      ]
    },
    "TeamDetails": {
      "type": "object",
      "properties": {
        "team_id": {
          "type": "string",
          "format": "uuid"
        },
        "team_name": {
          "type": "string"
        }
      },
      "required": [
        "team_id",
        "team_name"
      ]
    },
    "ListOfTeams": {
      "type": "object",
      "properties": {
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TeamDetails"
          }
        }
      },
      "required": [
        "teams"
      ]
    },
    "CompanyDetails": {
      "type": "object",
      "properties": {
        "company_id": {
          "type": "string",
          "format": "uuid"
        },
        "company_name": {
          "type": "string"
        }
      },
      "required": [
        "company_id",
        "company_name"
      ]
    },
    "RoleDetails": {
      "type": "object",
      "properties": {
        "role_id": {
          "type": "string"
        },
        "role_name": {
          "type": "string"
        }
      },
      "required": [
        "role_id",
        "role_name"
      ]
    },
    "ListOfRoles": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RoleDetails"
          }
        }
      },
      "required": [
        "roles"
      ]
    },
    "CompleteUserDetails": {
      "allOf": [
        {
          "$ref": "#/definitions/UserDetails"
        },
        {
          "$ref": "#/definitions/ListOfTeams"
        },
        {
          "$ref": "#/definitions/ListOfRoles"
        },
        {
          "type": "object",
          "properties": {
            "company": {
              "$ref": "#/definitions/CompanyDetails"
            }
          },
          "required": [
            "company"
          ]
        }
      ]
    },
    "UsersDetails": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CompleteUserDetails"
          }
        }
      },
      "required": [
        "users"
      ]
    },
    "ListOfUsersWithTotalUsersCount": {
      "allOf": [
        {
          "$ref": "#/definitions/UsersDetails"
        },
        {
          "type": "object",
          "properties": {
            "total": {
              "type": "integer",
              "format": "int64"
            }
          },
          "required": [
            "total"
          ]
        }
      ]
    },
    "UserWithCompanyWithTeamsAndRoles": {
      "allOf": [
        {
          "$ref": "#/definitions/UserNameAndEmail"
        },
        {
          "type": "object",
          "properties": {
            "company_id": {
              "type": "string"
            },
            "team_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "role_ids": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "required": [
            "company_id",
            "role_ids",
            "team_ids"
          ]
        }
      ]
    },
    "Companies": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CompanyDetails"
      }
    },
    "Roles": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RoleDetails"
      }
    },
    "Teams": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TeamDetails"
      }
    },
    "ConfigurationDetails": {
      "type": "object",
      "properties": {
        "companies": {
          "$ref": "#/definitions/Companies"
        },
        "roles": {
          "$ref": "#/definitions/Roles"
        },
        "teams": {
          "$ref": "#/definitions/Teams"
        }
      },
      "required": [
        "companies",
        "roles",
        "teams"
      ]
    }
  },
  "parameters": {
    "UserIdPathParameter": {
      "name": "user_id",
      "in": "path",
      "required": true,
      "type": "string"
    },
    "OffsetQueryParameter": {
      "name": "offset",
      "in": "query",
      "required": true,
      "type": "integer"
    },
    "LimitQueryParameter": {
      "name": "limit",
      "in": "query",
      "required": true,
      "type": "integer"
    },
    "AddUserParameter": {
      "name": "AddUser",
      "description": "Details of User to add",
      "in": "body",
      "schema": {
        "$ref": "#/definitions/UserWithCompanyWithTeamsAndRoles"
      }
    },
    "LoginParameter": {
      "name": "login",
      "description": "email and password to login in database",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      }
    },
    "SendResetPasswordLinkParameter": {
      "name": "ResetPasswordParameter",
      "description": "email to reset the password",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          }
        },
        "required": [
          "email"
        ]
      }
    },
    "UpdatePasswordParameter": {
      "name": "UpdatePasswordParameter",
      "description": "update password of user",
      "in": "body",
      "required": true,
      "schema": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string"
          }
        },
        "required": [
          "password"
        ]
      }
    }
  },
  "responses": {
    "ListOfUsersResponse": {
      "description": "list of users exist",
      "schema": {
        "$ref": "#/definitions/ListOfUsersWithTotalUsersCount"
      }
    },
    "UserDoesNotHavePermissionResponse": {
      "description": "Access Denied",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/CommonHttpExceptionFields"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "USER_DOES_NOT_HAVE_PERMISSION"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "AddUserBadRequestResponse": {
      "description": "Failed to add user",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/CommonHttpExceptionFields"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "INVALID_EMAIL",
                  "INVALID_NAME",
                  "USER_ALREADY_EXIST_WITH_THIS_EMAIL",
                  "NAME_SHOULD_NOT_CONTAINS_SPECIAL_CHARACTERS_AND_NUMBERS",
                  "INVALID_COMPANY_ID",
                  "INVALID_TEAM_IDS",
                  "INVALID_ROLE_IDS"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "EditUserBadRequestResponse": {
      "description": "Failed to add user",
      "schema": {
        "allOf": [
          {
            "$ref": "#/definitions/CommonHttpExceptionFields"
          },
          {
            "type": "object",
            "properties": {
              "res_status": {
                "type": "string",
                "enum": [
                  "INVALID_EMAIL",
                  "INVALID_NAME",
                  "NAME_SHOULD_NOT_CONTAINS_SPECIAL_CHARACTERS_AND_NUMBERS",
                  "INVALID_COMPANY_ID",
                  "INVALID_TEAM_IDS",
                  "INVALID_ROLE_IDS",
                  "USER_DOES_NOT_EXIST"
                ]
              }
            },
            "required": [
              "res_status"
            ]
          }
        ]
      }
    },
    "ConfigurationDetailsResponse": {
      "description": "Configuration Details",
      "schema": {
        "$ref": "#/definitions/ConfigurationDetails"
      }
    }
  },
  "paths": {
    "/configuration_details/v1": {
      "get": {
        "operationId": "get_configuration_details",
        "description": "get configuration details to add/edit user",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ConfigurationDetailsResponse"
          },
          "403": {
            "$ref": "#/responses/UserDoesNotHavePermissionResponse"
          }
        }
      }
    },
    "/users/v1/": {
      "get": {
        "operationId": "get_users",
        "description": "get list of users api",
        "security": [
          {
            "oauth": [
              "read"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/OffsetQueryParameter"
          },
          {
            "$ref": "#/parameters/LimitQueryParameter"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ListOfUsersResponse"
          },
          "403": {
            "$ref": "#/responses/UserDoesNotHavePermissionResponse"
          }
        }
      }
    },
    "/add_user/v1/": {
      "post": {
        "operationId": "add_user",
        "description": "add an user with valid details",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AddUserParameter"
          }
        ],
        "responses": {
          "201": {
            "description": "user added"
          },
          "400": {
            "$ref": "#/responses/AddUserBadRequestResponse"
          }
        }
      }
    },
    "/users/edit_user/{user_id}/v1/": {
      "put": {
        "operationId": "edit_user",
        "summary": "Edit User",
        "description": "edit an user",
        "security": [
          {
            "oauth": [
              "write"
            ]
          }
        ],
        "parameters": [
          {
            "$ref": "#/parameters/AddUserParameter"
          },
          {
            "$ref": "#/parameters/UserIdPathParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "Edit User Successfully"
          },
          "400": {
            "$ref": "#/responses/EditUserBadRequestResponse"
          }
        }
      }
    }
  }
}
    